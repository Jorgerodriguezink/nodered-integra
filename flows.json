[
    {
        "id": "0fc4cd08a03c83fc",
        "type": "tab",
        "label": "Sabre",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2652b627631379a9",
        "type": "tab",
        "label": "Navitaire",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ddad1d150cc1b78",
        "type": "tab",
        "label": "Worldticket",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f3a5e393a82b34c",
        "type": "tab",
        "label": "Flight Details",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e60a373608ffc7f",
        "type": "tab",
        "label": "Passenger List",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7cb2aa141057fa75",
        "type": "tab",
        "label": "Baggage Tag Passenger",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f1427039c449f455",
        "type": "tab",
        "label": "Baggage Tag Flight",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9af27f59e44970f6",
        "type": "tab",
        "label": "Flights",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aee00817.edddf8",
        "type": "tab",
        "label": "flow1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4fbc02c1.58290c",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c763acb693edbb24",
        "type": "tab",
        "label": "NEW Navitaire",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "407a01e4.6b637",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqttdashboard.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4bbba2de75306fe8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "4c526fe77f965961",
        "type": "http proxy",
        "name": "",
        "url": "https://192.168.56.5:5002",
        "noproxy": []
    },
    {
        "id": "1b7ce7b64177bc35",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "75a1b14b5ba38445",
        "type": "ssh-conf",
        "ssh": "/home/dev/.ink/devbox/config/ssh.config",
        "name": "jorge.rodriguez@development",
        "userlabel": "jorge.rodriguez@development"
    },
    {
        "id": "0773b0b6827c621b",
        "type": "ssh-conncfg",
        "name": "development",
        "sshhost": "192.168.56.5",
        "sshport": "5002",
        "keyname": "ink-devbox",
        "persist": true,
        "keeptime": "0",
        "keepcount": "3"
    },
    {
        "id": "16ca9403fd587554",
        "type": "http in",
        "z": "0fc4cd08a03c83fc",
        "name": "sabre",
        "url": "/sabre",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 200,
        "wires": [
            [
                "14a6eb581ec0a010",
                "f35f951c19ecb03e"
            ]
        ]
    },
    {
        "id": "14a6eb581ec0a010",
        "type": "json",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "4ca9c87656169561"
            ]
        ]
    },
    {
        "id": "4ca9c87656169561",
        "type": "switch",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "property": "payload.option",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "flight_details",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "passenger_list",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_passen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_flight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "flights",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 390,
        "y": 200,
        "wires": [
            [
                "a492f13c8284524d"
            ],
            [
                "95ec4e9d8cf3e429"
            ],
            [
                "02213509e5f62a10"
            ],
            [
                "16af3af8febc84c8"
            ],
            [
                "58a9fdb04521f693"
            ]
        ]
    },
    {
        "id": "a492f13c8284524d",
        "type": "link call",
        "z": "0fc4cd08a03c83fc",
        "name": "Call Flight Details",
        "links": [
            "ca05d5ea5f6da3ea"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "d297b3df995cbd44"
            ]
        ]
    },
    {
        "id": "b111e12df3ccb830",
        "type": "http response",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1020,
        "y": 200,
        "wires": []
    },
    {
        "id": "d297b3df995cbd44",
        "type": "xml",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 790,
        "y": 120,
        "wires": [
            [
                "b111e12df3ccb830"
            ]
        ]
    },
    {
        "id": "95ec4e9d8cf3e429",
        "type": "link call",
        "z": "0fc4cd08a03c83fc",
        "name": "Call Passenger List",
        "links": [
            "e3346e5155b84ffd"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "b23367c71f5ce09b"
            ]
        ]
    },
    {
        "id": "b23367c71f5ce09b",
        "type": "xml",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "b111e12df3ccb830"
            ]
        ]
    },
    {
        "id": "02213509e5f62a10",
        "type": "link call",
        "z": "0fc4cd08a03c83fc",
        "name": "Call Baggage Tag Passen",
        "links": [
            "b5d43180b88e6c7a"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "b111e12df3ccb830"
            ]
        ]
    },
    {
        "id": "f35f951c19ecb03e",
        "type": "debug",
        "z": "0fc4cd08a03c83fc",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "16af3af8febc84c8",
        "type": "link call",
        "z": "0fc4cd08a03c83fc",
        "name": "Call Baggage Tag Flight",
        "links": [
            "6aeabb3de6de6750"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 320,
        "wires": [
            [
                "b111e12df3ccb830"
            ]
        ]
    },
    {
        "id": "6058038f6f3a6131",
        "type": "http request",
        "z": "0fc4cd08a03c83fc",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 280,
        "wires": [
            [
                "bf2bb0e85735d688"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "329ce6944d0a66ee",
        "type": "link in",
        "z": "0fc4cd08a03c83fc",
        "name": "sabre in req ",
        "links": [
            "3750f8ca19b67a3a",
            "9d19ad45cd1352d0"
        ],
        "x": 45,
        "y": 280,
        "wires": [
            [
                "6058038f6f3a6131"
            ]
        ]
    },
    {
        "id": "bf2bb0e85735d688",
        "type": "link out",
        "z": "0fc4cd08a03c83fc",
        "name": "sabre out req",
        "mode": "link",
        "links": [
            "93dc8c28bbc7acaa",
            "c6a1ae5d7cb3f37f",
            "5379ec603398c832",
            "aaded006d65269a6"
        ],
        "x": 295,
        "y": 280,
        "wires": []
    },
    {
        "id": "58a9fdb04521f693",
        "type": "link call",
        "z": "0fc4cd08a03c83fc",
        "name": "Call Flights",
        "links": [
            "c5f47a907f29eae8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 590,
        "y": 380,
        "wires": [
            [
                "290ef41f86ce7de5"
            ]
        ]
    },
    {
        "id": "290ef41f86ce7de5",
        "type": "xml",
        "z": "0fc4cd08a03c83fc",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 790,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4bcb55f7e0f1ee0e",
        "type": "http in",
        "z": "2652b627631379a9",
        "name": "navitaire",
        "url": "/navitaire",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "67416d962933eb04",
                "f0aae292b36b0e4e"
            ]
        ]
    },
    {
        "id": "67416d962933eb04",
        "type": "json",
        "z": "2652b627631379a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "621b6addbc784274"
            ]
        ]
    },
    {
        "id": "621b6addbc784274",
        "type": "switch",
        "z": "2652b627631379a9",
        "name": "",
        "property": "payload.option",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "flight_details",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "passenger_list",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_passen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_flight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "flights",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "3d5f891ec2a3e2ec"
            ],
            [
                "1b9e49b73d07cc2e"
            ],
            [
                "76c0506c196e2382"
            ],
            [
                "dc6d0f055411c950"
            ],
            [
                "3f9a3727c3928b7a"
            ]
        ]
    },
    {
        "id": "3d5f891ec2a3e2ec",
        "type": "link call",
        "z": "2652b627631379a9",
        "name": "Call Flight Details",
        "links": [
            "ca05d5ea5f6da3ea"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "3081ef543b6ee0a9"
            ]
        ]
    },
    {
        "id": "46f948260a535faf",
        "type": "http response",
        "z": "2652b627631379a9",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 200,
        "wires": []
    },
    {
        "id": "3081ef543b6ee0a9",
        "type": "xml",
        "z": "2652b627631379a9",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "46f948260a535faf"
            ]
        ]
    },
    {
        "id": "1b9e49b73d07cc2e",
        "type": "link call",
        "z": "2652b627631379a9",
        "name": "Call Passenger List",
        "links": [
            "e3346e5155b84ffd"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "203aad24fa3a1b96"
            ]
        ]
    },
    {
        "id": "203aad24fa3a1b96",
        "type": "xml",
        "z": "2652b627631379a9",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "46f948260a535faf",
                "db52ea9b15ad1ea1"
            ]
        ]
    },
    {
        "id": "76c0506c196e2382",
        "type": "link call",
        "z": "2652b627631379a9",
        "name": "Call Baggage Tag",
        "links": [
            "b5d43180b88e6c7a"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 280,
        "wires": [
            [
                "46f948260a535faf"
            ]
        ]
    },
    {
        "id": "f0aae292b36b0e4e",
        "type": "debug",
        "z": "2652b627631379a9",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "dc6d0f055411c950",
        "type": "link call",
        "z": "2652b627631379a9",
        "name": "Call Baggage Tag Flight",
        "links": [
            "6aeabb3de6de6750"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 360,
        "wires": [
            [
                "46f948260a535faf"
            ]
        ]
    },
    {
        "id": "6678a50fd2ef4ab0",
        "type": "http request",
        "z": "2652b627631379a9",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 200,
        "y": 300,
        "wires": [
            [
                "5d8f479a5374b633"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "7ca04af36f7089ee",
        "type": "link in",
        "z": "2652b627631379a9",
        "name": "navitaire in req ",
        "links": [
            "f86c97f4723f1bad",
            "454794accb3ad8d1",
            "4911234fe5ed35b1",
            "267e0e8adcc76ba0"
        ],
        "x": 65,
        "y": 300,
        "wires": [
            [
                "6678a50fd2ef4ab0"
            ]
        ]
    },
    {
        "id": "5d8f479a5374b633",
        "type": "link out",
        "z": "2652b627631379a9",
        "name": "navitaire out req",
        "mode": "link",
        "links": [
            "ce74f7d75e942cea",
            "f11b4b2706cd6c38",
            "6daf3f0d3904e471",
            "b8e74e87133509f7"
        ],
        "x": 335,
        "y": 300,
        "wires": []
    },
    {
        "id": "db52ea9b15ad1ea1",
        "type": "debug",
        "z": "2652b627631379a9",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f9a3727c3928b7a",
        "type": "link call",
        "z": "2652b627631379a9",
        "name": "Call Flights",
        "links": [
            "c5f47a907f29eae8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "909e31942bc7d240"
            ]
        ]
    },
    {
        "id": "909e31942bc7d240",
        "type": "xml",
        "z": "2652b627631379a9",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 870,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c18b49a99c44e17e",
        "type": "http in",
        "z": "0ddad1d150cc1b78",
        "name": "worldticket",
        "url": "/worldticket",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "d6195e2ffd2e2b69",
                "406e011645e2544b"
            ]
        ]
    },
    {
        "id": "d6195e2ffd2e2b69",
        "type": "json",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "9d1c333a7efce7ac"
            ]
        ]
    },
    {
        "id": "181bc06869f9cb9a",
        "type": "link call",
        "z": "0ddad1d150cc1b78",
        "name": "Call Flight Details",
        "links": [],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "05eb9da1c1465a44"
            ]
        ]
    },
    {
        "id": "8655510da2271735",
        "type": "http response",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 200,
        "wires": []
    },
    {
        "id": "05eb9da1c1465a44",
        "type": "xml",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "8655510da2271735"
            ]
        ]
    },
    {
        "id": "2fcb1d4499d26624",
        "type": "link call",
        "z": "0ddad1d150cc1b78",
        "name": "Call Passenger List",
        "links": [
            "e3346e5155b84ffd"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "37fa175c2c0277db"
            ]
        ]
    },
    {
        "id": "37fa175c2c0277db",
        "type": "xml",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "8655510da2271735"
            ]
        ]
    },
    {
        "id": "a77b160bb3939b0b",
        "type": "link call",
        "z": "0ddad1d150cc1b78",
        "name": "Call Baggage Tag",
        "links": [
            "b5d43180b88e6c7a"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 280,
        "wires": [
            [
                "8655510da2271735"
            ]
        ]
    },
    {
        "id": "406e011645e2544b",
        "type": "debug",
        "z": "0ddad1d150cc1b78",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "9d1c333a7efce7ac",
        "type": "switch",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "property": "payload.option",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "flight_details",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "passenger_list",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_passen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "baggage_tag_flight",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "flights",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "181bc06869f9cb9a"
            ],
            [
                "2fcb1d4499d26624"
            ],
            [
                "a77b160bb3939b0b"
            ],
            [
                "3b2d4ad7b52e2e68"
            ],
            [
                "9d27198e724d53b3"
            ]
        ]
    },
    {
        "id": "3b2d4ad7b52e2e68",
        "type": "link call",
        "z": "0ddad1d150cc1b78",
        "name": "Call Baggage Tag Flight",
        "links": [
            "6aeabb3de6de6750"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 360,
        "wires": [
            [
                "8655510da2271735"
            ]
        ]
    },
    {
        "id": "9d27198e724d53b3",
        "type": "link call",
        "z": "0ddad1d150cc1b78",
        "name": "Call Flights",
        "links": [
            "c5f47a907f29eae8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "faf9c97913c87f3c"
            ]
        ]
    },
    {
        "id": "faf9c97913c87f3c",
        "type": "xml",
        "z": "0ddad1d150cc1b78",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 870,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d1e1695133a8a916",
        "type": "http in",
        "z": "8f3a5e393a82b34c",
        "name": "flights",
        "url": "/flights",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "0fa25be7e1242965"
            ]
        ]
    },
    {
        "id": "ca05d5ea5f6da3ea",
        "type": "link in",
        "z": "8f3a5e393a82b34c",
        "name": "link Flight Details",
        "links": [],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "0fa25be7e1242965"
            ]
        ]
    },
    {
        "id": "84fc1d22d27b268d",
        "type": "switch",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload.external",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sabre",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "navitaire",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "worldticket",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "6679b889b99e17c7"
            ],
            [
                "2e3c60755923aaa8"
            ],
            [
                "f39c082412a37fce"
            ]
        ]
    },
    {
        "id": "6679b889b99e17c7",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "TokenCreateRQ",
        "func": "var xmlContent = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">TokenCreateRQ</eb:Service>'+\n            '<eb:Action>TokenCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>12345</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">>'+\n            '<wsse:UsernameToken>'+\n              '<wsse:Username>612035</wsse:Username>'+\n              '<wsse:Password>PDAPDA01</wsse:Password>'+\n              '<Organization>LA</Organization>'+\n              '<Domain>LA</Domain>'+\n            '</wsse:UsernameToken>'+\n          '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<sws:TokenCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\" />'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nvar test = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n  '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb = \"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink = \"http://www.w3.org/1999/xlink\" xmlns:xsd = \"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">SessionCreateRQ</eb:Service>'+\n            '<eb:Action>SessionCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>100000-1687876129-611278548@inkcloud.io</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T14:28:49+00:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n        '<wsse:UsernameToken>'+\n          '<wsse:Username>612035</wsse:Username>'+\n          '<wsse:Password>PDAPDA01</wsse:Password>'+\n          '<Organization>LA</Organization>'+\n          '<Domain>LA</Domain>'+\n        '</wsse:UsernameToken>'+\n      '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<SessionCreateRQ returnContextID=\"true\">'+\n      '<POS>'+\n        '<Source PseudoCityCode=\"LA\"/>'+\n      '</POS>'+\n    '</SessionCreateRQ>'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nmsg.headers = {\n  'Content-Type': 'text/xml'\n};\nmsg.payload = test;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "94c56e60ff5446e7"
            ]
        ]
    },
    {
        "id": "07008d0fc4e9564f",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "ACS_FlightDetailRQ",
        "func": "var xmlFlight_old = '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:sec=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:mes=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:v300=\"http://services.sabre.com/ACS/BSO/flightDetail/v3\">' +\n   '<soapenv:Header>' +\n      '<eb:MessageHeader eb:id=\"\" eb:version=\"1.0\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\">' +\n         '<eb:From>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:From>' +\n         '<eb:To>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:To>' +\n         '<eb:CPAId>LA</eb:CPAId>' +\n         '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>' +\n         '<eb:Service eb:type=\"OTA\">ACS_FlightDetailRQ</eb:Service>' +\n         '<eb:Action>ACS_FlightDetailRQ</eb:Action>' +\n         '<eb:MessageData>' +\n            '<eb:MessageId>12345</eb:MessageId>' +\n            '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>' +\n         '</eb:MessageData>' +\n      '</eb:MessageHeader>' +\n      '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">' +\n      //'<wsse:BinarySecurityToken EncodingType=\"wsse:Base64Binary\" valueType=\"String\">T1RLAQJ5UpwPtdFdie1LP+YHkDDF9nydZQr6fmKyhZtET56C7xBSMqDvsPH/hppkl5Y0GAXoAADQfMZMS/zqCd5wQXVJj9eTY/GU0hhHya8f0LvnyQSbcAWdYFOOVVuio6h9rvz9rd+emW0EL9MMgR31aXd37qKajVN8UFgTvzBx4vZEswCXMrDnHk8W/7tYxPpAEHl8a3cI/8CSXJwRW0ip15i2+td+VkqGD1yO+KDPW4oUOiuUiG/3pwp5BarcCntrolxHjCoYlNhLSzOvqKuI4lF9qgrfBVb/9L5GKIikR9aZSP6x5tMb/9OIcKbS/fB/8tFBWBAi108oWp5NoS7QEsmNg6F0jQ**</wsse:BinarySecurityToken>' +\n      '<wsse:BinarySecurityToken valueType=\"String\" EncodingType=\"wsse:Base64Binary\">' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._+'</wsse:BinarySecurityToken>'+\n      '</wsse:Security>' +\n   '</soapenv:Header>' +\n   '<soapenv:Body>' +\n      '<v300:ACS_FlightDetailRQ>' +\n         '<FlightInfo>' +\n            '<Airline>'+ global.get(\"values\").carrier_code+'</Airline>' +\n            //'<Flight>'+ global.get(\"values\").flight_number +'</Flight>' +\n            '<DepartureDate>'+ global.get(\"values\").scheduled_departure_date +'</DepartureDate>' +\n            //'<Origin>'+ global.get(\"values\").origin_station_iata +'</Origin>' +\n         '</FlightInfo>' +\n         '<Client>KIOSK</Client>' +\n      '</v300:ACS_FlightDetailRQ>' +\n   '</soapenv:Body>' +\n   '</soapenv:Envelope>';\nvar xmlFlight = '<soap-env:Envelope xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:v300=\"http://services.sabre.com/ACS/BSO/flightDetail/v3\">'+\n   '<soap-env:Header>'+\n             '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n               '<eb:From>'+\n                 '<eb:PartyId type=\"urn:x12.org:IO5:01\">inkcloud.io</eb:PartyId>'+\n               '</eb:From>'+\n               '<eb:To>'+\n                 '<eb:PartyId type=\"urn:x12.org:IO5:01\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n               '</eb:To>'+\n               '<eb:CPAId>LA</eb:CPAId>'+\n               '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n               '<eb:Service eb:type=\"OTA\">ACS_FlightDetailRQ</eb:Service>'+\n               '<eb:Action>ACS_FlightDetailRQ</eb:Action>'+\n               '<eb:MessageData>'+\n                 '<eb:MessageId>100000-1654040819-885791657@inkcloud.io</eb:MessageId>'+\n                 '<eb:Timestamp>2022-05-31T23:46:59+00:00</eb:Timestamp>'+\n               '</eb:MessageData>'+\n             '</eb:MessageHeader>'+\n             '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n   '<wsse:BinarySecurityToken valueType = \"String\" EncodingType = \"wsse:Base64Binary\"> ' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._+'</wsse:BinarySecurityToken>'+\n         '</wsse:Security>'+\n           '</soap-env:Header>'+\n   '<soap-env:Body>'+\n      '<v300:ACS_FlightDetailRQ>'+\n         '<FlightInfo>'+\n            '<Airline>' + global.get(\"values\").carrier_code + '</Airline>' +\n            '<Flight>' + global.get(\"values\").flight_number + '</Flight>' +\n            '<DepartureDate>' + global.get(\"values\").scheduled_departure_date + '</DepartureDate>' +\n            '<Origin>' + global.get(\"values\").origin_station_iata + '</Origin>' +\n         '</FlightInfo>'+\n         '<Client>KIOSK</Client>'+\n      '</v300:ACS_FlightDetailRQ>'+\n   '</soap-env:Body>'+\n         '</soap-env:Envelope>';\nmsg.headers = {\n    'Content-Type': 'text/xml',\n   //'Content-Type': 'multipart/form-data',\n   //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 180,
        "wires": [
            [
                "f507122c78da8e3f"
            ]
        ]
    },
    {
        "id": "531dd434a7f183d0",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "07008d0fc4e9564f"
            ]
        ]
    },
    {
        "id": "38aa245a345d3f10",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1610,
        "y": 180,
        "wires": [
            [
                "a9d5789f76c2ecb4",
                "a42efaab9a8618f2"
            ]
        ]
    },
    {
        "id": "350ac6035f6587e9",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "851f5fac640b3153",
        "type": "link out",
        "z": "8f3a5e393a82b34c",
        "name": "link out 15",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 160,
        "wires": []
    },
    {
        "id": "5a9ee0007708b1cb",
        "type": "http response",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1910,
        "y": 220,
        "wires": []
    },
    {
        "id": "2e3c60755923aaa8",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "Logon",
        "func": "var xmlContent = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n  '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '</s:Header>'+\n    '<s:Body>'+    \n        //'<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            //'<logonRequestData xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n            //    '<a:DomainCode>INKAPP</a:DomainCode>'+\n            //    '<a:AgentName>EXT</a:AgentName>'+\n            //    '<a:Password>t%bRof$FRDXH65$F</a:Password>'+\n            //'</logonRequestData>'+\n    '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            '<logonRequestData>'+\n                '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">inksbdolb</AgentName>'+\n                '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">Volotea23!</Password>'+\n            '</logonRequestData>'+\n        '</LogonRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n  'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlContent2.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "1d2037c26d0dd3c5"
            ]
        ]
    },
    {
        "id": "d36d31eae647792d",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "a0c0d4b64559c68d"
            ]
        ]
    },
    {
        "id": "a0c0d4b64559c68d",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n   '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0]+'</h:Signature>'+\n    '</s:Header>'+\n    '<s:Body>'+\n        '<GetFlightsRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n            '<getFlightsReqData xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<CarrierCode>'+ global.get(\"values\").carrier_code +'</CarrierCode>'+\n                //'<FlightNumber i:nil=\"true\">'+ global.get(\"values\").flight_number +'</FlightNumber>'+\n                '<FlightNumber i:nil=\"true\"></FlightNumber>' +\n                '<DepartureStation>'+ global.get(\"values\").origin_station_iata +'</DepartureStation>'+\n                //'<ArrivalStation>DEN</ArrivalStation>'+\n                '<StationDateTime>'+ global.get(\"values\").scheduled_departure_date +'</StationDateTime>'+\n                '<HoursBack>0</HoursBack>'+\n                '<HoursForward>24</HoursForward>'+\n            '</getFlightsReqData>'+\n        '</GetFlightsRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\n\nmsg.headers = {\n        'Accept': '*/*',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n        'Connection': 'keep-alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'text/xml; charset=\"utf-8\"',\n        'DNT': '1',\n        //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 300,
        "wires": [
            [
                "68b7674e152dabc4"
            ]
        ]
    },
    {
        "id": "3dacca3c256a5673",
        "type": "link out",
        "z": "8f3a5e393a82b34c",
        "name": "link out 16",
        "mode": "return",
        "links": [],
        "x": 2035,
        "y": 260,
        "wires": []
    },
    {
        "id": "8273671d88c297f7",
        "type": "http response",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2070,
        "y": 300,
        "wires": []
    },
    {
        "id": "f39c082412a37fce",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n        '<smsapi>'+\n    \t        '<request>get_all_flights_from_origin</request>'+\n                '<connector>'+\n                        '<id>7adbdb16-37eb-4630-b558-adce12785762</id>'+\n                        '<password>b558</password>'+\n                '</connector>'+\n                '<requestdetails>'+\n                        '<origin>' + global.get(\"values\").origin_station_iata +'</origin>'+\n    \t\t        '<startdate>2023-07-07</startdate>'+\n\t\t        '<enddate>2023-07-09</enddate>'+\n                '</requestdetails>'+\n        '</smsapi>';\n\nmsg.headers = {\n        'Accept': 'application/xml',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',        \n        'Connection': 'Keep-Alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'application/xml; charset=\"utf-8\"',\n        //'DNT': '1',\n        //'Host': \".$nav_host,\n        //'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 400,
        "wires": [
            [
                "c0dd7865cb7e9cf2"
            ]
        ]
    },
    {
        "id": "c0dd7865cb7e9cf2",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Worldticket http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/getAllFlightsFromOrigin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 400,
        "wires": [
            [
                "77e92247e46264a9"
            ]
        ],
        "info": "https://test-api.worldticket.net/ink-service/ink/test-skywork-gds/getAllFlightsFromOrigin"
    },
    {
        "id": "77e92247e46264a9",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "d49736bd4702d79e"
            ]
        ]
    },
    {
        "id": "d49736bd4702d79e",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1170,
        "y": 400,
        "wires": [
            [
                "6c76fa381698b2f9",
                "6162e60e2b9291ec"
            ]
        ]
    },
    {
        "id": "6c76fa381698b2f9",
        "type": "link out",
        "z": "8f3a5e393a82b34c",
        "name": "link out 17",
        "mode": "return",
        "links": [],
        "x": 1295,
        "y": 360,
        "wires": []
    },
    {
        "id": "6162e60e2b9291ec",
        "type": "http response",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1320,
        "y": 400,
        "wires": []
    },
    {
        "id": "0fa25be7e1242965",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Ext Values",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "ext_url",
                "pt": "msg",
                "to": "payload.ext_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "84fc1d22d27b268d",
                "408e5220a5e6e9f4"
            ]
        ]
    },
    {
        "id": "f9901fa5a5d59ad9",
        "type": "debug",
        "z": "8f3a5e393a82b34c",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 360,
        "wires": []
    },
    {
        "id": "1d2037c26d0dd3c5",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "sessionmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "369ed395b05e1b29"
            ]
        ]
    },
    {
        "id": "68b7674e152dabc4",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "operationmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 300,
        "wires": [
            [
                "c4cf92808ee28836"
            ]
        ]
    },
    {
        "id": "408e5220a5e6e9f4",
        "type": "debug",
        "z": "8f3a5e393a82b34c",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "369ed395b05e1b29",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 900,
        "y": 300,
        "wires": [
            [
                "d36d31eae647792d"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "c4cf92808ee28836",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1580,
        "y": 300,
        "wires": [
            [
                "bc633293b0a589f4"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/operationmanager"
    },
    {
        "id": "61f66dc870a5617e",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys[0].InventoryJourney\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 300,
        "wires": [
            [
                "3dacca3c256a5673",
                "8273671d88c297f7",
                "f9901fa5a5d59ad9"
            ]
        ]
    },
    {
        "id": "bc633293b0a589f4",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1770,
        "y": 300,
        "wires": [
            [
                "61f66dc870a5617e",
                "24e4dcbc3c7d21a7"
            ]
        ]
    },
    {
        "id": "94c56e60ff5446e7",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 180,
        "wires": [
            [
                "531dd434a7f183d0"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "f507122c78da8e3f",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "38aa245a345d3f10"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "a42efaab9a8618f2",
        "type": "debug",
        "z": "8f3a5e393a82b34c",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 100,
        "wires": []
    },
    {
        "id": "a9d5789f76c2ecb4",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"soap-env:Envelope\"][\"soap-env:Body\"][0][\"ns3:ACS_FlightDetailRS\"]\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 180,
        "wires": [
            [
                "851f5fac640b3153",
                "5a9ee0007708b1cb"
            ]
        ]
    },
    {
        "id": "e4b972b4a4dca602",
        "type": "link in",
        "z": "8f3a5e393a82b34c",
        "name": "link in Flights",
        "links": [],
        "x": 535,
        "y": 240,
        "wires": [
            [
                "26a328d783ac350d"
            ]
        ]
    },
    {
        "id": "26a328d783ac350d",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Ext Values",
        "rules": [
            {
                "t": "set",
                "p": "values.carrier_code",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].FlightDesignator[0][\"a:CarrierCode\"][0]",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "values.origin_station_iata",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].DepartureStation[0]",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "values.scheduled_departure_date",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].STD[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "2e3c60755923aaa8"
            ]
        ]
    },
    {
        "id": "24e4dcbc3c7d21a7",
        "type": "debug",
        "z": "8f3a5e393a82b34c",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 380,
        "wires": []
    },
    {
        "id": "b40b61c4d2d8d044",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "sessionmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 600,
        "wires": [
            [
                "9b08cf0a813dfc63"
            ]
        ]
    },
    {
        "id": "cab315005e832ec9",
        "type": "inject",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "a45f6a4f985f3987"
            ]
        ]
    },
    {
        "id": "a45f6a4f985f3987",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "Logon",
        "func": "var xmlContent = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n  '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '</s:Header>'+\n    '<s:Body>'+    \n        //'<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            //'<logonRequestData xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n            //    '<a:DomainCode>INKAPP</a:DomainCode>'+\n            //    '<a:AgentName>EXT</a:AgentName>'+\n            //    '<a:Password>t%bRof$FRDXH65$F</a:Password>'+\n            //'</logonRequestData>'+\n    '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            '<logonRequestData>'+\n                '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">inksbdolb</AgentName>'+\n                '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">Volotea23!</Password>'+\n            '</logonRequestData>'+\n        '</LogonRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n  'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlContent2.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 600,
        "wires": [
            [
                "b40b61c4d2d8d044"
            ]
        ]
    },
    {
        "id": "41111bc9603cf92e",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test.api.tui/flight/newskies/soap/operationmanager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "bafa6bae77c16109"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "bafa6bae77c16109",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 850,
        "y": 700,
        "wires": [
            [
                "0457fcf37defcd1c"
            ]
        ]
    },
    {
        "id": "8969d38c8b611f1d",
        "type": "xml",
        "z": "8f3a5e393a82b34c",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 770,
        "y": 600,
        "wires": [
            [
                "6fd20f7f93847305"
            ]
        ]
    },
    {
        "id": "6fd20f7f93847305",
        "type": "function",
        "z": "8f3a5e393a82b34c",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n    '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n              '<s:Header>'+\n                  '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n                  '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0] +'</h:Signature>'+\n              '</s:Header>'+\n              '<s:Body>'+\n                  '<GetFlightsRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n            '<getFlightsReqData xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<CarrierCode>OR</CarrierCode>'+\n                '<FlightNumber i:nil=\"true\"></FlightNumber>'+\n                '<DepartureStation>AMS</DepartureStation>'+\n                '<ArrivalStation>'+\n'</ArrivalStation>'+\n                '<StationDateTime>2023-07-11T00:00:00</StationDateTime>'+\n                '<HoursBack>0</HoursBack>'+\n                '<HoursForward>24</HoursForward>'+\n            '</getFlightsReqData>'+\n        '</GetFlightsRequest>'+\n              '</s:Body>'+\n            '</s:Envelope>';\n\nmsg.headers = {\n        'Accept': '*/*',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n        'Connection': 'keep-alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'text/xml; charset=\"utf-8\"',\n        'DNT': '1',\n        //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 600,
        "wires": [
            [
                "638af0b560826ce8"
            ]
        ]
    },
    {
        "id": "638af0b560826ce8",
        "type": "change",
        "z": "8f3a5e393a82b34c",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "operationmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "41111bc9603cf92e"
            ]
        ]
    },
    {
        "id": "9b08cf0a813dfc63",
        "type": "http request",
        "z": "8f3a5e393a82b34c",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test.api.tui/flight/newskies/soap/sessionmanager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 600,
        "wires": [
            [
                "8969d38c8b611f1d"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "0457fcf37defcd1c",
        "type": "debug",
        "z": "8f3a5e393a82b34c",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 700,
        "wires": []
    },
    {
        "id": "19c4fa6838f268bc",
        "type": "http in",
        "z": "5e60a373608ffc7f",
        "name": "passengers",
        "url": "/passengers",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 260,
        "wires": [
            [
                "399e77990fc7c4fd"
            ]
        ]
    },
    {
        "id": "e3346e5155b84ffd",
        "type": "link in",
        "z": "5e60a373608ffc7f",
        "name": "link Passenger List",
        "links": [],
        "x": 105,
        "y": 200,
        "wires": [
            [
                "399e77990fc7c4fd"
            ]
        ]
    },
    {
        "id": "d097a736d471c944",
        "type": "switch",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload.external",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sabre",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "navitaire",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "worldticket",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "65316ebd50e5f6a4"
            ],
            [
                "f46c7d8951d684d2"
            ],
            [
                "f403aee17613268b"
            ]
        ]
    },
    {
        "id": "2c09751b2109f7e3",
        "type": "http request",
        "z": "5e60a373608ffc7f",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://sws-crt-as.cert.havail.sabre.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 200,
        "wires": [
            [
                "17e8d164212171a9"
            ]
        ]
    },
    {
        "id": "65316ebd50e5f6a4",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "TokenCreateRQ",
        "func": "var test = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n  '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb = \"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink = \"http://www.w3.org/1999/xlink\" xmlns:xsd = \"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">SessionCreateRQ</eb:Service>'+\n            '<eb:Action>SessionCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>100000-1687876129-611278548@inkcloud.io</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T14:28:49+00:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n        '<wsse:UsernameToken>'+\n          '<wsse:Username>612035</wsse:Username>'+\n          '<wsse:Password>PDAPDA01</wsse:Password>'+\n          '<Organization>LA</Organization>'+\n          '<Domain>LA</Domain>'+\n        '</wsse:UsernameToken>'+\n      '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<SessionCreateRQ returnContextID=\"true\">'+\n      '<POS>'+\n        '<Source PseudoCityCode=\"LA\"/>'+\n      '</POS>'+\n    '</SessionCreateRQ>'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nmsg.headers = {\n  'Content-Type': 'text/xml'\n};\n\nmsg.payload = test;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            [
                "2c09751b2109f7e3"
            ]
        ]
    },
    {
        "id": "2e3c2c7bcaa94699",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "GetPassengerListRQ",
        "func": "var xmlPassengers = '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:sec=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:mes=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:v4=\"http://services.sabre.com/checkin/getPassengerList/v4\">' +\n   '<soapenv:Header>' +\n   '<eb:MessageHeader eb:id=\"\" eb:version=\"1.0\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\">' +\n      '<eb:From>' +\n         '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:From>' +\n      '<eb:To>' +\n         '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:To>' +\n      '<eb:CPAId>LA</eb:CPAId>' +\n      '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>' +\n      '<eb:Service eb:type=\"OTA\">GetPassengerListRQ</eb:Service>' +\n      '<eb:Action>GetPassengerListRQ</eb:Action>' +\n      '<eb:MessageData>' +\n         '<eb:MessageId>12345</eb:MessageId>' +\n         '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>' +\n         '</eb:MessageData>' +\n      '</eb:MessageHeader>' +\n   '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">' +\n   //'<wsse:BinarySecurityToken EncodingType=\"wsse:Base64Binary\" valueType=\"String\">T1RLAQJ5UpwPtdFdie1LP+YHkDDF9nydZQr6fmKyhZtET56C7xBSMqDvsPH/hppkl5Y0GAXoAADQfMZMS/zqCd5wQXVJj9eTY/GU0hhHya8f0LvnyQSbcAWdYFOOVVuio6h9rvz9rd+emW0EL9MMgR31aXd37qKajVN8UFgTvzBx4vZEswCXMrDnHk8W/7tYxPpAEHl8a3cI/8CSXJwRW0ip15i2+td+VkqGD1yO+KDPW4oUOiuUiG/3pwp5BarcCntrolxHjCoYlNhLSzOvqKuI4lF9qgrfBVb/9L5GKIikR9aZSP6x5tMb/9OIcKbS/fB/8tFBWBAi108oWp5NoS7QEsmNg6F0jQ**</wsse:BinarySecurityToken>' +\n   '<wsse:BinarySecurityToken valueType=\"String\" EncodingType=\"wsse:Base64Binary\">' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._ + '</wsse:BinarySecurityToken>' +\n   '</wsse:Security>' +\n   '</soapenv:Header>' +\n   '<soapenv:Body>'+\n   '<v4:GetPassengerListRQ version=\"4.0.0\" timeStamp=\"2023-06-27T17:08:00Z\" messageID=\"12345\" serviceOption=\"Stateless\">' +\n      '<v4:Itinerary>' +\n         '<v4:Airline>' + global.get(\"values\").carrier_code + '</v4:Airline>' +\n         '<v4:Flight>' + global.get(\"values\").flight_number + '</v4:Flight>' +\n         '<v4:DepartureDate>' + global.get(\"values\").scheduled_departure_date + '</v4:DepartureDate>' +\n         '<v4:Origin>' + global.get(\"values\").origin_station_iata + '</v4:Origin>' +\n      '</v4:Itinerary>' +\n      '<v4:DisplayCodeRequest>' +\n         '<v4:DisplayCodes>' +\n            '<v4:DisplayCode>PALL</v4:DisplayCode>' +\n         '</v4:DisplayCodes>' +\n      '</v4:DisplayCodeRequest>' +\n   '</v4:GetPassengerListRQ>' +\n   '</soapenv:Body>'+\n   '</soapenv:Envelope>';\n\nmsg.headers = {\n    'Content-Type': 'text/xml',\n   //'Content-Type': 'multipart/form-data',\n   //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlPassengers;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8d37714963266d94",
        "type": "http request",
        "z": "5e60a373608ffc7f",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://sws-crt-as.cert.havail.sabre.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "b317e9fd66a6d7ed"
            ]
        ]
    },
    {
        "id": "17e8d164212171a9",
        "type": "xml",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "80c6fabeb72e6a99"
            ]
        ]
    },
    {
        "id": "b317e9fd66a6d7ed",
        "type": "xml",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1630,
        "y": 200,
        "wires": [
            [
                "d2aed09f5f242a88",
                "63c8e7fb5b7ca320"
            ]
        ]
    },
    {
        "id": "aa904e83485057f0",
        "type": "link out",
        "z": "5e60a373608ffc7f",
        "name": "link out 5",
        "mode": "return",
        "links": [],
        "x": 1905,
        "y": 160,
        "wires": []
    },
    {
        "id": "a04d753004c558d7",
        "type": "http response",
        "z": "5e60a373608ffc7f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 220,
        "wires": []
    },
    {
        "id": "399e77990fc7c4fd",
        "type": "change",
        "z": "5e60a373608ffc7f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "d097a736d471c944"
            ]
        ]
    },
    {
        "id": "80c6fabeb72e6a99",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "ACS_PassengerListRQ",
        "func": "var xmlFlight = '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:sec=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:mes=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:ACS=\"http://services.sabre.com/ACS/BSO/passengerList/v3\">' +\n   '<soapenv:Header>' +\n      '<eb:MessageHeader eb:id=\"\" eb:version=\"1.0\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\">' +\n         '<eb:From>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:From>' +\n         '<eb:To>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:To>' +\n         '<eb:CPAId>LA</eb:CPAId>' +\n         '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>' +\n         '<eb:Service eb:type=\"OTA\">ACS_PassengerListRQ</eb:Service>' +\n         '<eb:Action>ACS_PassengerListRQ</eb:Action>' +\n         '<eb:MessageData>' +\n            '<eb:MessageId>12345</eb:MessageId>' +\n            '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>' +\n         '</eb:MessageData>' +\n      '</eb:MessageHeader>' +\n      '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">' +\n      //'<wsse:BinarySecurityToken EncodingType=\"wsse:Base64Binary\" valueType=\"String\">T1RLAQJ5UpwPtdFdie1LP+YHkDDF9nydZQr6fmKyhZtET56C7xBSMqDvsPH/hppkl5Y0GAXoAADQfMZMS/zqCd5wQXVJj9eTY/GU0hhHya8f0LvnyQSbcAWdYFOOVVuio6h9rvz9rd+emW0EL9MMgR31aXd37qKajVN8UFgTvzBx4vZEswCXMrDnHk8W/7tYxPpAEHl8a3cI/8CSXJwRW0ip15i2+td+VkqGD1yO+KDPW4oUOiuUiG/3pwp5BarcCntrolxHjCoYlNhLSzOvqKuI4lF9qgrfBVb/9L5GKIikR9aZSP6x5tMb/9OIcKbS/fB/8tFBWBAi108oWp5NoS7QEsmNg6F0jQ**</wsse:BinarySecurityToken>' +\n      '<wsse:BinarySecurityToken valueType=\"String\" EncodingType=\"wsse:Base64Binary\">' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._+'</wsse:BinarySecurityToken>'+\n      '</wsse:Security>' +\n   '</soapenv:Header>' +\n   '<soapenv:Body>' +\n      '<ACS:ACS_PassengerListRQ>' +\n         '<Itinerary>' +\n            '<Airline>' + global.get(\"values\").carrier_code+'</Airline>' +\n            '<Flight>' + global.get(\"values\").flight_number +'</Flight>' +\n            '<DepartureDate>' + global.get(\"values\").scheduled_departure_date +'</DepartureDate>' +\n            '<Origin>' + global.get(\"values\").origin_station_iata +'</Origin>' +\n         '</Itinerary>' +\n         '<DisplayCodeRequest>'+\n            '<DisplayCodes condition=\"OR\">'+\n               '<DisplayCode>UPID</DisplayCode>'+\n               '<DisplayCode>XUPID</DisplayCode>'+\n            '</DisplayCodes>'+\n            '<SortSequence>Name</SortSequence>'+\n         '</DisplayCodeRequest>'+\n      '</ACS:ACS_PassengerListRQ>' +\n   '</soapenv:Body>' +\n   '</soapenv:Envelope>';\n\nmsg.headers = {\n    'Content-Type': 'text/xml',\n   //'Content-Type': 'multipart/form-data',\n   //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "8d37714963266d94"
            ]
        ]
    },
    {
        "id": "6b57c0d43024e10e",
        "type": "http request",
        "z": "5e60a373608ffc7f",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test.api.tui/flight/newskies/soap/sessionmanager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 320,
        "wires": [
            [
                "4ccbf997a6eccdad"
            ]
        ]
    },
    {
        "id": "f46c7d8951d684d2",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "Logon",
        "func": "var xmlContent = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n  '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '</s:Header>'+\n    '<s:Body>'+    \n        //'<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            //'<logonRequestData xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n            //    '<a:DomainCode>INKAPP</a:DomainCode>'+\n            //    '<a:AgentName>EXT</a:AgentName>'+\n            //    '<a:Password>t%bRof$FRDXH65$F</a:Password>'+\n            //'</logonRequestData>'+\n    '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            '<logonRequestData>'+\n                '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">inksbdolb</AgentName>'+\n                '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">Volotea23!</Password>'+\n            '</logonRequestData>'+\n        '</LogonRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n  'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlContent2.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 320,
        "wires": [
            [
                "6b57c0d43024e10e"
            ]
        ]
    },
    {
        "id": "edd78d2b73eda787",
        "type": "xml",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1650,
        "y": 320,
        "wires": [
            [
                "72bb7c02f47809be",
                "b90f876edabaf582"
            ]
        ]
    },
    {
        "id": "4ccbf997a6eccdad",
        "type": "xml",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "7f69d077f254e476"
            ]
        ]
    },
    {
        "id": "28bbb7b0786ab522",
        "type": "http request",
        "z": "5e60a373608ffc7f",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://test.api.tui/flight/newskies/soap/operationmanager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1460,
        "y": 320,
        "wires": [
            [
                "edd78d2b73eda787"
            ]
        ]
    },
    {
        "id": "2feb18b294a8de4f",
        "type": "link out",
        "z": "5e60a373608ffc7f",
        "name": "link out 7",
        "mode": "return",
        "links": [],
        "x": 1925,
        "y": 280,
        "wires": []
    },
    {
        "id": "33557b56ba4ecdc4",
        "type": "http response",
        "z": "5e60a373608ffc7f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 340,
        "wires": []
    },
    {
        "id": "7f69d077f254e476",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "GetManifest",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n   '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0]+'</h:Signature>'+\n    '</s:Header>'+\n    '<s:Body>'+\n    '<GetManifestRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n        '<manifestRequest xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i = \"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<InventoryLegKey xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Common\">'+\n                    '<a:CarrierCode>TOM</a:CarrierCode>'+\n                    //'<a:FlightNumber>'.$flight_number.'</a:FlightNumber>'+\n                    //'<a:OpSuffix i:nil=\"true\"></a:OpSuffix>'+\n                    //'<a:DepartureDate>'.$departure_date.'</a:DepartureDate>'+\n                    '<a:DepartureStation>LWG</a:DepartureStation>'+\n                    //'<a:ArrivalStation>'.$arrival_station.'</a:ArrivalStation>'+\n                '</InventoryLegKey>'+\n                '<FlightType>All</FlightType>'+\n                '<AvsCollectionsMode>None</AvsCollectionsMode>'+\n                '<SSRCollectionsMode>None</SSRCollectionsMode>'+\n              '</manifestRequest>'+\n            '</GetManifestRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlManifestFiltered = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n    '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n            '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0] + '</h:Signature>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<GetManifestFilteredRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n                '<manifestFilteredRequest xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<InventoryLegKey xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Common\">'+\n                    '<a:CarrierCode>'+ global.get(\"values\").carrier_code +'</a:CarrierCode>'+\n                    '<a:FlightNumber>'+ global.get(\"values\").flight_number +'</a:FlightNumber>'+\n                    '<a:OpSuffix i:nil=\"true\">'+\n                    '</a:OpSuffix>'+\n                    '<a:DepartureDate>'+ global.get(\"values\").scheduled_departure_date +'</a:DepartureDate>'+\n                    '<a:DepartureStation>'+ global.get(\"values\").origin_station_iata +'</a:DepartureStation>'+\n                    '<a:ArrivalStation>' + global.get(\"values\").destination_station_iata +'</a:ArrivalStation>'+\n                '</InventoryLegKey>'+\n                '<FlightType>All</FlightType>'+\n                '<ManifestFilter xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Booking\">'+\n                    '<a:IncludeBaggage>true</a:IncludeBaggage>'+\n                    '<a:IncludePassengerTravelDocs>true</a:IncludePassengerTravelDocs>'+\n                    '<a:IncludePassengerInfants>true</a:IncludePassengerInfants>'+\n                    '<a:IncludePassengerAddresses>true</a:IncludePassengerAddresses>'+\n                    '<a:IncludeBookingComments>true</a:IncludeBookingComments>'+\n                    '<a:IncludeBookingQueues>true</a:IncludeBookingQueues>'+\n                    '<a:IncludePassengerJourneySegmentProperties>true</a:IncludePassengerJourneySegmentProperties>'+\n                    '<a:IncludePassengerJourneySSRs>true</a:IncludePassengerJourneySSRs>'+\n                    '<a:IncludePassengerSecurityInfo>true</a:IncludePassengerSecurityInfo>'+\n                '</ManifestFilter>'+\n                '</manifestFilteredRequest>'+\n            '</GetManifestFilteredRequest>'+\n        '</s:Body>'+\n    '</s:Envelope >';\n\nmsg.headers = {\n    'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlManifestFiltered.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetManifestFiltered',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlManifestFiltered;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "28bbb7b0786ab522"
            ]
        ]
    },
    {
        "id": "6b09b7ad706a68a3",
        "type": "debug",
        "z": "5e60a373608ffc7f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 440,
        "wires": []
    },
    {
        "id": "72bb7c02f47809be",
        "type": "loop",
        "z": "5e60a373608ffc7f",
        "name": "",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-orig",
        "x": 1870,
        "y": 420,
        "wires": [
            [
                "6eec754bf09d30d8"
            ],
            [
                "6b09b7ad706a68a3",
                "1986ea1489a56abd"
            ]
        ]
    },
    {
        "id": "6eec754bf09d30d8",
        "type": "debug",
        "z": "5e60a373608ffc7f",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 400,
        "wires": []
    },
    {
        "id": "1986ea1489a56abd",
        "type": "change",
        "z": "5e60a373608ffc7f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.result",
                "pt": "msg",
                "to": "msg.payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 500,
        "wires": [
            [
                "72bb7c02f47809be"
            ]
        ]
    },
    {
        "id": "be163b9a6421479f",
        "type": "debug",
        "z": "5e60a373608ffc7f",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 760,
        "wires": []
    },
    {
        "id": "c63701599eae76e6",
        "type": "inject",
        "z": "5e60a373608ffc7f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "f403aee17613268b"
            ]
        ]
    },
    {
        "id": "f403aee17613268b",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "GetPassengers",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n        '<smsapi>'+\n                '<request>get_passengers_by_flight</request>'+\n                '<connector>'+\n                        '<id>7adbdb16-37eb-4630-b558-adce12785762</id>'+\n                        '<password>b558</password>'+\n                '</connector>'+\n                '<requestdetails>'+\n                        //'<flightid>'+ global.get(\"values\").flight_number +'</flightid>'+\n                        '<flightid>IN0001</flightid>'+\n                '</requestdetails>'+\n        '</smsapi>';\n\nmsg.headers = {\n        'Accept': 'application/xml',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',        \n        'Connection': 'Keep-Alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'application/xml; charset=\"utf-8\"',\n        //'DNT': '1',\n        //'Host': \".$nav_host,\n        //'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 700,
        "wires": [
            [
                "ccb2c3e6f1579db8"
            ]
        ]
    },
    {
        "id": "ccb2c3e6f1579db8",
        "type": "http request",
        "z": "5e60a373608ffc7f",
        "name": "Worldticket http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test-api.worldticket.net/ink-service/ink/test-skywork-gds/getPassengersByFlight",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 700,
        "wires": [
            [
                "be163b9a6421479f",
                "2a6d30ab31e81867"
            ]
        ]
    },
    {
        "id": "2a6d30ab31e81867",
        "type": "xml",
        "z": "5e60a373608ffc7f",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "bedf4f359273c7d9",
                "f288a896b017a16b"
            ]
        ]
    },
    {
        "id": "bedf4f359273c7d9",
        "type": "link out",
        "z": "5e60a373608ffc7f",
        "name": "link out 10",
        "mode": "return",
        "links": [],
        "x": 1205,
        "y": 660,
        "wires": []
    },
    {
        "id": "f288a896b017a16b",
        "type": "http response",
        "z": "5e60a373608ffc7f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 720,
        "wires": []
    },
    {
        "id": "b90f876edabaf582",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar manifest = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest\n//var manifest = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    manifest: manifest\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 320,
        "wires": [
            [
                "2feb18b294a8de4f",
                "33557b56ba4ecdc4",
                "35cf3fd94574191f"
            ]
        ]
    },
    {
        "id": "35cf3fd94574191f",
        "type": "debug",
        "z": "5e60a373608ffc7f",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 260,
        "wires": []
    },
    {
        "id": "63c8e7fb5b7ca320",
        "type": "debug",
        "z": "5e60a373608ffc7f",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 80,
        "wires": []
    },
    {
        "id": "d2aed09f5f242a88",
        "type": "function",
        "z": "5e60a373608ffc7f",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar manifest = msg.payload[\"soap-env:Envelope\"][\"soap-env:Body\"][0][\"ns3:ACS_PassengerListRS\"]\n//var manifest = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    manifest: manifest\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 200,
        "wires": [
            [
                "aa904e83485057f0",
                "a04d753004c558d7"
            ]
        ]
    },
    {
        "id": "f14ce91205611604",
        "type": "http request",
        "z": "7cb2aa141057fa75",
        "name": "request local",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://92189c4ce88c.ngrok.app/api/1.8/baggage_tag/add?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "b2c909f0aab1e9ae"
            ]
        ]
    },
    {
        "id": "69e8c62cbe39a118",
        "type": "websocket in",
        "z": "7cb2aa141057fa75",
        "name": "",
        "x": 80,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "78dab2cfa6200fb2",
        "type": "http in",
        "z": "7cb2aa141057fa75",
        "name": "baggagetag",
        "url": "/baggagetag",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "901847ca583106c7"
            ]
        ]
    },
    {
        "id": "246ec9afc0dedf07",
        "type": "http response",
        "z": "7cb2aa141057fa75",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 400,
        "wires": []
    },
    {
        "id": "02eac63daba307ff",
        "type": "exec",
        "z": "7cb2aa141057fa75",
        "command": "curl --digest -u inkapiuser:inkapiuser -v ' https://2a254d6fa292.ngrok.app/api/1.8/baggage_tag/add?ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&baggage_tag_status=INACTIVE'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 1170,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b2c909f0aab1e9ae",
        "type": "json",
        "z": "7cb2aa141057fa75",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "78f4d5ea863b925a"
            ]
        ]
    },
    {
        "id": "d691dd1f1e81c989",
        "type": "exec",
        "z": "7cb2aa141057fa75",
        "command": "curl --digest -u inkapiuser:inkapiuser -v ' https://2a254d6fa292.ngrok.app/api/1.8/baggage_tag/get_baggage_tag_pectab?machine_key=601&ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&flight_number=IN0001&license_plate=0212306297'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 1230,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2160342f8eea28bd",
        "type": "json",
        "z": "7cb2aa141057fa75",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1390,
        "y": 360,
        "wires": [
            [
                "246ec9afc0dedf07",
                "22e240a6e1259475"
            ]
        ]
    },
    {
        "id": "b5d43180b88e6c7a",
        "type": "link in",
        "z": "7cb2aa141057fa75",
        "name": "link Baggage Tag Passenger",
        "links": [],
        "x": 45,
        "y": 280,
        "wires": [
            [
                "901847ca583106c7"
            ]
        ]
    },
    {
        "id": "052bd86fa25abd4e",
        "type": "json",
        "z": "7cb2aa141057fa75",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 280,
        "wires": [
            [
                "31797f0a045f2890"
            ]
        ]
    },
    {
        "id": "7ed83c4a41223f1a",
        "type": "http request",
        "z": "7cb2aa141057fa75",
        "name": "request local",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://92189c4ce88c.ngrok.app/api/1.8/passenger/get_detail?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "052bd86fa25abd4e"
            ]
        ]
    },
    {
        "id": "22e240a6e1259475",
        "type": "link out",
        "z": "7cb2aa141057fa75",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 1665,
        "y": 300,
        "wires": []
    },
    {
        "id": "78f4d5ea863b925a",
        "type": "switch",
        "z": "7cb2aa141057fa75",
        "name": "",
        "property": "payload.operation_result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 260,
        "wires": [
            [
                "22e240a6e1259475"
            ],
            [
                "a04ece247f6b2e98"
            ]
        ]
    },
    {
        "id": "901847ca583106c7",
        "type": "function",
        "z": "7cb2aa141057fa75",
        "name": "In Baggage add",
        "func": "var data = 'station_iata=' +msg.payload.origin_station_iata + '&' +\n    'ink_passenger_identifier=' + msg.payload.ink_passenger_identifier + '&' +\n    'baggage_tag_weight_kg=13&' +\n    'baggage_tag_status=INACTIVE';\n    \nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 280,
        "wires": [
            [
                "7ed83c4a41223f1a"
            ]
        ]
    },
    {
        "id": "edd5bbadec5f027a",
        "type": "exec",
        "z": "7cb2aa141057fa75",
        "command": "curl --digest -u inkapiuser:inkapiuser -v 'https://2a254d6fa292.ngrok.app/api/1.8/passenger/get_detail?station_iata=INK&ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&baggage_tag_weight_kg=13&baggage_tag_status=INACTIVE'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 390,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1f13d0eca468806b",
        "type": "http request",
        "z": "7cb2aa141057fa75",
        "name": "request staging",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api-staging.inkcloud.io/api/1.8/baggage_tag/add",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-api-key",
                "valueType": "other",
                "valueValue": "KuhYwntNVh72ek6DicGPsYB4r1qVxOS1fBRBv6z4"
            },
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "basic username=inkapiuser,password=inkapiuser"
            }
        ],
        "x": 120,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "0d3f0caceebb2e50",
        "type": "function",
        "z": "7cb2aa141057fa75",
        "name": "In Baggage add",
        "func": "var data = 'ink_passenger_identifier=' + msg.payload.passengers[0].ink_passenger_identifier + '&' +\n    'baggage_tag_weight_kg=13&' +\n    'baggage_tag_status=INACTIVE';\n    \nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 260,
        "wires": [
            [
                "f14ce91205611604"
            ]
        ]
    },
    {
        "id": "a04ece247f6b2e98",
        "type": "function",
        "z": "7cb2aa141057fa75",
        "name": "In Baggage add",
        "func": "var data = 'machine_key=601' +\n    '&ink_passenger_identifier=' + msg.payload.ink_passenger_identifier + \n    '&flight_number=' + msg.payload.itinerary[0].flight_number +\n    '&license_plate=' + msg.payload.license_plate;\n\nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 360,
        "wires": [
            [
                "a620021e03fa1873"
            ]
        ]
    },
    {
        "id": "a620021e03fa1873",
        "type": "http request",
        "z": "7cb2aa141057fa75",
        "name": "request local",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://92189c4ce88c.ngrok.app/api/1.8/baggage_tag/get_baggage_tag_pectab?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "2160342f8eea28bd"
            ]
        ]
    },
    {
        "id": "a49feb64d8cb3b1b",
        "type": "function",
        "z": "7cb2aa141057fa75",
        "name": "In Baggage add",
        "func": "var data = '{\"passenger_name\":\"TESTING/JORGE\",\"ink_passenger_identifier\":\"774B3441-39587767-62553855-78703955-724B4746-53673D3D\",\"itinerary\":[{\"flight_number\":\"IN0001\",\"scheduled_departure_date\":\"2023-06-16\",\"station_iata\":\"CPH\",\"sector_identifier\":\"\",\"flight_status\":\"OPEN\",\"booking_reference\":\"\",\"ticket_number\":\"\",\"passenger_status\":\"CHECKED_IN\",\"seat_number\":\"2A\",\"sequence\":\"2\"}],\"ssrs\":[],\"baggage_tags_destination\":\"CPH\",\"baggage_tags\":[{\"license_plate\":\"0212306336\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306337\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306338\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306339\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306340\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306341\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306342\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306343\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306344\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306345\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306346\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306347\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306348\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306349\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306350\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306351\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306352\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306353\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306354\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306355\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306356\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306357\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306358\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306359\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306360\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306361\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306362\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306363\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306364\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306365\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306366\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306367\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306368\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"}],\"apis_gender\":\"MALE\",\"group_allowance\":0,\"aci\":\"ADULT\",\"id_number\":null,\"email\":null,\"citizen_country\":null,\"residence_country\":null,\"date_of_birth\":null,\"external_language_code\":\"\",\"passenger_weight\":\"50\",\"weight_unit\":\"kg\"}';\n    \nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "31797f0a045f2890",
        "type": "json-full-schema-validator",
        "z": "7cb2aa141057fa75",
        "name": "Passenger validator",
        "property": "payload",
        "propertyType": "msg",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"type\": \"object\",\n            \"properties\": {\n        \"passengers\": {\n            \"type\": \"array\",\n                \"items\": [\n                    {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"passenger_name\": {\n                                \"type\": \"string\"\n                            },\n                            \"ink_passenger_identifier\": {\n                                \"type\": \"string\"\n                            },\n                            \"itinerary\": {\n                                \"type\": \"array\",\n                                \"items\": [\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"flight_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scheduled_departure_date\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scheduled_departure_time\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"station_iata\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"sector_identifier\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"flight_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"booking_reference\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"ticket_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"passenger_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"seat_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"sequence\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"flight_number\",\n                                            \"scheduled_departure_date\",\n                                            \"scheduled_departure_time\",\n                                            \"station_iata\",\n                                            \"sector_identifier\",\n                                            \"flight_status\",\n                                            \"booking_reference\",\n                                            \"ticket_number\",\n                                            \"passenger_status\",\n                                            \"seat_number\",\n                                            \"sequence\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"ssrs\": {\n                                \"type\": \"array\",\n                                \"items\": {}\n                            },\n                            \"baggage_tags_destination\": {\n                                \"type\": \"string\"\n                            },\n                            \"baggage_tags\": {\n                                \"type\": \"array\",\n                                \"items\": [\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"apis_gender\": {\n                                \"type\": \"string\"\n                            },\n                            \"group_allowance\": {\n                                \"type\": \"integer\"\n                            },\n                            \"aci\": {\n                                \"type\": \"string\"\n                            },\n                            \"id_number\": {\n                                \"type\": \"null\"\n                            },\n                            \"email\": {\n                                \"type\": \"null\"\n                            },\n                            \"citizen_country\": {\n                                \"type\": \"null\"\n                            },\n                            \"residence_country\": {\n                                \"type\": \"null\"\n                            },\n                            \"date_of_birth\": {\n                                \"type\": \"null\"\n                            },\n                            \"external_language_code\": {\n                                \"type\": \"string\"\n                            },\n                            \"passenger_weight\": {\n                                \"type\": \"string\"\n                            },\n                            \"weight_unit\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\n                            \"passenger_name\",\n                            \"ink_passenger_identifier\",\n                            \"itinerary\",\n                            \"ssrs\",\n                            \"baggage_tags_destination\",\n                            \"baggage_tags\",\n                            \"apis_gender\",\n                            \"group_allowance\",\n                            \"aci\",\n                            \"id_number\",\n                            \"email\",\n                            \"citizen_country\",\n                            \"residence_country\",\n                            \"date_of_birth\",\n                            \"external_language_code\",\n                            \"passenger_weight\",\n                            \"weight_unit\"\n                        ]\n                    }\n                ]\n        }\n    },\n    \"required\": [\n        \"passengers\"\n    ]\n}",
        "x": 740,
        "y": 280,
        "wires": [
            [
                "0d3f0caceebb2e50"
            ],
            [
                "3eb8765ab5f2135e"
            ]
        ],
        "outputLabels": [
            "OK",
            "KO"
        ]
    },
    {
        "id": "0597a44cb516c6f1",
        "type": "function",
        "z": "7cb2aa141057fa75",
        "name": "Schema error",
        "func": "var data = '{\"error\":\"JSON_validator\",\"description\":\"error Schema passenger/get_detail\"}';\n    \nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 460,
        "wires": [
            [
                "22e240a6e1259475"
            ]
        ]
    },
    {
        "id": "e5deca6ef3f89cd6",
        "type": "link in",
        "z": "7cb2aa141057fa75",
        "name": "linkerror1",
        "links": [
            "3eb8765ab5f2135e"
        ],
        "x": 1375,
        "y": 460,
        "wires": [
            [
                "0597a44cb516c6f1"
            ]
        ]
    },
    {
        "id": "3eb8765ab5f2135e",
        "type": "link out",
        "z": "7cb2aa141057fa75",
        "name": "linkerror1",
        "mode": "link",
        "links": [
            "e5deca6ef3f89cd6"
        ],
        "x": 935,
        "y": 420,
        "wires": []
    },
    {
        "id": "413ad556441a1037",
        "type": "http request",
        "z": "f1427039c449f455",
        "name": "request local",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://15f217b2b6d1.ngrok.app/api/1.8/baggage_tag/add?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "d2c04a727c381549"
            ]
        ]
    },
    {
        "id": "3aac8a2066559609",
        "type": "http in",
        "z": "f1427039c449f455",
        "name": "baggagetagmult",
        "url": "/baggagetagmult",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 120,
        "wires": [
            [
                "1f0bb91f802b2dc5"
            ]
        ]
    },
    {
        "id": "7c8a96f9bf198547",
        "type": "http response",
        "z": "f1427039c449f455",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1490,
        "y": 100,
        "wires": []
    },
    {
        "id": "70c910f4694d8fc0",
        "type": "exec",
        "z": "f1427039c449f455",
        "command": "curl --digest -u inkapiuser:inkapiuser -v ' https://2a254d6fa292.ngrok.app/api/1.8/baggage_tag/add?ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&baggage_tag_status=INACTIVE'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 1210,
        "y": 360,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d2c04a727c381549",
        "type": "json",
        "z": "f1427039c449f455",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1370,
        "y": 400,
        "wires": [
            [
                "0bd03269cefe0ec6"
            ]
        ]
    },
    {
        "id": "02a2d83bd3bf02c5",
        "type": "exec",
        "z": "f1427039c449f455",
        "command": "curl --digest -u inkapiuser:inkapiuser -v ' https://2a254d6fa292.ngrok.app/api/1.8/baggage_tag/get_baggage_tag_pectab?machine_key=601&ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&flight_number=IN0001&license_plate=0212306297'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 1270,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "66f527401b05e987",
        "type": "json",
        "z": "f1427039c449f455",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1430,
        "y": 500,
        "wires": [
            [
                "e3f98284b9db255d"
            ]
        ]
    },
    {
        "id": "01f31759228d5374",
        "type": "json",
        "z": "f1427039c449f455",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "10684c8ab14142f7"
            ]
        ]
    },
    {
        "id": "7e8d846df1498e95",
        "type": "http request",
        "z": "f1427039c449f455",
        "name": "request local",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://15f217b2b6d1.ngrok.app/api/1.8/passenger/get_detail?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 420,
        "wires": [
            [
                "01f31759228d5374"
            ]
        ]
    },
    {
        "id": "0bd03269cefe0ec6",
        "type": "switch",
        "z": "f1427039c449f455",
        "name": "",
        "property": "payload.operation_result",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 400,
        "wires": [
            [
                "e3f98284b9db255d"
            ],
            [
                "4c6a18581e1f97ed"
            ]
        ]
    },
    {
        "id": "c00ff76e4ce063e2",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "var data = 'station_iata=' + msg.payload.itinerary[0].station_iata + '&' +\n    'ink_passenger_identifier=' + msg.payload.ink_passenger_identifier + '&' +\n    'baggage_tag_weight_kg=13&' +\n    'baggage_tag_status=INACTIVE';\n    \nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 420,
        "wires": [
            [
                "7e8d846df1498e95"
            ]
        ]
    },
    {
        "id": "f63baa369a132ad5",
        "type": "exec",
        "z": "f1427039c449f455",
        "command": "curl --digest -u inkapiuser:inkapiuser -v 'https://2a254d6fa292.ngrok.app/api/1.8/passenger/get_detail?station_iata=INK&ink_passenger_identifier=774B3441-39587767-62553855-78703955-724B4746-53673D3D&baggage_tag_weight_kg=13&baggage_tag_status=INACTIVE'",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "requst_dev",
        "x": 430,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0f9a48ace6170afc",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "var data = 'ink_passenger_identifier=' + msg.payload.passengers[0].ink_passenger_identifier + '&' +\n    'baggage_tag_weight_kg=13&' +\n    'baggage_tag_status=INACTIVE';\n    \nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "413ad556441a1037"
            ]
        ]
    },
    {
        "id": "4c6a18581e1f97ed",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "var data = 'machine_key=601' +\n    '&ink_passenger_identifier=' + msg.payload.ink_passenger_identifier + \n    '&flight_number=' + msg.payload.itinerary[0].flight_number +\n    '&license_plate=' + msg.payload.license_plate;\n\nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 500,
        "wires": [
            [
                "bd43b4c55b8366df"
            ]
        ]
    },
    {
        "id": "bd43b4c55b8366df",
        "type": "http request",
        "z": "f1427039c449f455",
        "name": "request local",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://15f217b2b6d1.ngrok.app/api/1.8/baggage_tag/get_baggage_tag_pectab?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 500,
        "wires": [
            [
                "66f527401b05e987"
            ]
        ]
    },
    {
        "id": "6559403cb6c097a8",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "var data = '{\"passenger_name\":\"TESTING/JORGE\",\"ink_passenger_identifier\":\"774B3441-39587767-62553855-78703955-724B4746-53673D3D\",\"itinerary\":[{\"flight_number\":\"IN0001\",\"scheduled_departure_date\":\"2023-06-16\",\"station_iata\":\"CPH\",\"sector_identifier\":\"\",\"flight_status\":\"OPEN\",\"booking_reference\":\"\",\"ticket_number\":\"\",\"passenger_status\":\"CHECKED_IN\",\"seat_number\":\"2A\",\"sequence\":\"2\"}],\"ssrs\":[],\"baggage_tags_destination\":\"CPH\",\"baggage_tags\":[{\"license_plate\":\"0212306336\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306337\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306338\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306339\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306340\",\"baggage_tag_status\":\"CANCEL\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306341\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306342\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306343\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306344\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306345\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306346\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306347\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306348\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306349\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306350\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306351\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306352\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306353\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"0\"},{\"license_plate\":\"0212306354\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306355\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306356\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306357\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306358\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306359\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306360\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306361\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306362\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306363\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306364\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306365\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306366\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306367\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"},{\"license_plate\":\"0212306368\",\"baggage_tag_status\":\"INACTIVE\",\"baggage_tag_weight_kg\":\"13\"}],\"apis_gender\":\"MALE\",\"group_allowance\":0,\"aci\":\"ADULT\",\"id_number\":null,\"email\":null,\"citizen_country\":null,\"residence_country\":null,\"date_of_birth\":null,\"external_language_code\":\"\",\"passenger_weight\":\"50\",\"weight_unit\":\"kg\"}';\n    \nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "10684c8ab14142f7",
        "type": "json-full-schema-validator",
        "z": "f1427039c449f455",
        "name": "Passenger validator",
        "property": "payload",
        "propertyType": "msg",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"type\": \"object\",\n            \"properties\": {\n        \"passengers\": {\n            \"type\": \"array\",\n                \"items\": [\n                    {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"passenger_name\": {\n                                \"type\": \"string\"\n                            },\n                            \"ink_passenger_identifier\": {\n                                \"type\": \"string\"\n                            },\n                            \"itinerary\": {\n                                \"type\": \"array\",\n                                \"items\": [\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"flight_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scheduled_departure_date\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"scheduled_departure_time\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"station_iata\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"sector_identifier\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"flight_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"booking_reference\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"ticket_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"passenger_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"seat_number\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"sequence\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"flight_number\",\n                                            \"scheduled_departure_date\",\n                                            \"scheduled_departure_time\",\n                                            \"station_iata\",\n                                            \"sector_identifier\",\n                                            \"flight_status\",\n                                            \"booking_reference\",\n                                            \"ticket_number\",\n                                            \"passenger_status\",\n                                            \"seat_number\",\n                                            \"sequence\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"ssrs\": {\n                                \"type\": \"array\",\n                                \"items\": {}\n                            },\n                            \"baggage_tags_destination\": {\n                                \"type\": \"string\"\n                            },\n                            \"baggage_tags\": {\n                                \"type\": \"array\",\n                                \"items\": [\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"license_plate\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_status\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"baggage_tag_weight_kg\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"license_plate\",\n                                            \"baggage_tag_status\",\n                                            \"baggage_tag_weight_kg\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"apis_gender\": {\n                                \"type\": \"string\"\n                            },\n                            \"group_allowance\": {\n                                \"type\": \"integer\"\n                            },\n                            \"aci\": {\n                                \"type\": \"string\"\n                            },\n                            \"id_number\": {\n                                \"type\": \"null\"\n                            },\n                            \"email\": {\n                                \"type\": \"null\"\n                            },\n                            \"citizen_country\": {\n                                \"type\": \"null\"\n                            },\n                            \"residence_country\": {\n                                \"type\": \"null\"\n                            },\n                            \"date_of_birth\": {\n                                \"type\": \"null\"\n                            },\n                            \"external_language_code\": {\n                                \"type\": \"string\"\n                            },\n                            \"passenger_weight\": {\n                                \"type\": \"string\"\n                            },\n                            \"weight_unit\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\n                            \"passenger_name\",\n                            \"ink_passenger_identifier\",\n                            \"itinerary\",\n                            \"ssrs\",\n                            \"baggage_tags_destination\",\n                            \"baggage_tags\",\n                            \"apis_gender\",\n                            \"group_allowance\",\n                            \"aci\",\n                            \"id_number\",\n                            \"email\",\n                            \"citizen_country\",\n                            \"residence_country\",\n                            \"date_of_birth\",\n                            \"external_language_code\",\n                            \"passenger_weight\",\n                            \"weight_unit\"\n                        ]\n                    }\n                ]\n        }\n    },\n    \"required\": [\n        \"passengers\"\n    ]\n}",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "0f9a48ace6170afc"
            ],
            [
                "3fa7f9c23a99545a"
            ]
        ],
        "outputLabels": [
            "OK",
            "KO"
        ]
    },
    {
        "id": "de8ae082589dc409",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "Schema error",
        "func": "var data = '{\"error\":\"JSON_validator\",\"description\":\"error Schema passenger/get_detail\"}';\n    \nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 600,
        "wires": [
            [
                "e3f98284b9db255d"
            ]
        ]
    },
    {
        "id": "7fdaa2987f754c06",
        "type": "link in",
        "z": "f1427039c449f455",
        "name": "linkerror1",
        "links": [
            "3fa7f9c23a99545a"
        ],
        "x": 1415,
        "y": 600,
        "wires": [
            [
                "de8ae082589dc409"
            ]
        ]
    },
    {
        "id": "3fa7f9c23a99545a",
        "type": "link out",
        "z": "f1427039c449f455",
        "name": "linkerror1",
        "mode": "link",
        "links": [
            "7fdaa2987f754c06"
        ],
        "x": 975,
        "y": 560,
        "wires": []
    },
    {
        "id": "472a605f70cb7dcd",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "var data = 'station_iata=' +msg.payload.origin_station_iata + '&' +\n    'flight_number=' + msg.payload.flight_number + '&' +\n    'scheduled_departure_date=' + msg.payload.scheduled_departure_date;\n    \nmsg.payload.data = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "d2a6966b78deab49"
            ]
        ]
    },
    {
        "id": "d2a6966b78deab49",
        "type": "http request",
        "z": "f1427039c449f455",
        "name": "request local",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://15f217b2b6d1.ngrok.app/api/1.8/flight/get_manifest?{{{payload.data}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "digest",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 80,
        "wires": [
            [
                "c17f83ca5639d18c"
            ]
        ]
    },
    {
        "id": "c17f83ca5639d18c",
        "type": "json",
        "z": "f1427039c449f455",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 80,
        "wires": [
            [
                "6d5fa4655885ff21"
            ]
        ]
    },
    {
        "id": "6aeabb3de6de6750",
        "type": "link in",
        "z": "f1427039c449f455",
        "name": "link Baggage Tag Flight",
        "links": [],
        "x": 145,
        "y": 40,
        "wires": [
            [
                "1f0bb91f802b2dc5"
            ]
        ]
    },
    {
        "id": "6d5fa4655885ff21",
        "type": "loop",
        "z": "f1427039c449f455",
        "name": "",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "payload.passengers",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-last",
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "94648302d63b723f"
            ],
            [
                "c00ff76e4ce063e2"
            ]
        ]
    },
    {
        "id": "e3f98284b9db255d",
        "type": "link out",
        "z": "f1427039c449f455",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "5f52698bbdccd846"
        ],
        "x": 1695,
        "y": 400,
        "wires": []
    },
    {
        "id": "5f52698bbdccd846",
        "type": "link in",
        "z": "f1427039c449f455",
        "name": "link in 1",
        "links": [
            "e3f98284b9db255d"
        ],
        "x": 845,
        "y": 240,
        "wires": [
            [
                "9143c06a1d8177a1"
            ]
        ]
    },
    {
        "id": "9143c06a1d8177a1",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "//msg.payload.result.push({ result: msg.payload.data[0] });\n\n//return msg;\n\n/*var result = []; \nresult = global.get(\"result\"); //to retrieve a variable\n\nmsg.payload.result.push(result);\n//result.push(msg.payload.data[0]);\n//msg.payload.result = context.get(\"result\");\n//context.set(\"result\", result); // to store a variable\n\nreturn msg;\n*/\n//let result = msg.payload.data[0][0];\nif (global.get(\"result\") == undefined) { \n    let result = [msg.payload.data[0][0]];\n    global.set(\"result\", result); // to store a variable\n} else {\n    let result = msg.payload.data[0][0];\n    let append = [global.get(\"result\")][0];\n    append.push(result);\n    global.set(\"result\", append); // to store a variable\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "6d5fa4655885ff21"
            ]
        ]
    },
    {
        "id": "1f0bb91f802b2dc5",
        "type": "change",
        "z": "f1427039c449f455",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "result",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "472a605f70cb7dcd"
            ]
        ]
    },
    {
        "id": "94648302d63b723f",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add",
        "func": "let resultado = global.get(\"result\");\nmsg.payload.result = resultado;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 60,
        "wires": [
            [
                "027f4a302ebf9005",
                "f596074143fa10d8",
                "7c8a96f9bf198547"
            ]
        ]
    },
    {
        "id": "19a919a980a21ac8",
        "type": "function",
        "z": "f1427039c449f455",
        "name": "In Baggage add OK",
        "func": "//msg.payload.result.push({ result: msg.payload.data[0] });\n\n//return msg;\n\n/*var result = []; \nresult = global.get(\"result\"); //to retrieve a variable\n\nmsg.payload.result.push(result);\n//result.push(msg.payload.data[0]);\n//msg.payload.result = context.get(\"result\");\n//context.set(\"result\", result); // to store a variable\n\nreturn msg;\n*/\nlet result = msg.payload.data[0];\nlet append = [global.get(\"result\")];\nappend.push(result);\n//append=Array.prototype.push.apply(result, append);\nglobal.set(\"result\", append); // to store a variable\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f596074143fa10d8",
        "type": "link out",
        "z": "f1427039c449f455",
        "name": "link out 8",
        "mode": "return",
        "links": [],
        "x": 1455,
        "y": 40,
        "wires": []
    },
    {
        "id": "027f4a302ebf9005",
        "type": "debug",
        "z": "f1427039c449f455",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 180,
        "wires": []
    },
    {
        "id": "01d0079415825f0d",
        "type": "http in",
        "z": "9af27f59e44970f6",
        "name": "flights",
        "url": "/flights",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "f7905e69c8de84b8"
            ]
        ]
    },
    {
        "id": "c5f47a907f29eae8",
        "type": "link in",
        "z": "9af27f59e44970f6",
        "name": "link Flights",
        "links": [],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "f7905e69c8de84b8"
            ]
        ]
    },
    {
        "id": "37b3d3d9695a63d4",
        "type": "switch",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload.external",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sabre",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "navitaire",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "worldticket",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "95993db7c9bff44c"
            ],
            [
                "518ada0322a50d70"
            ],
            [
                "3a749a595e7f2eb6"
            ]
        ]
    },
    {
        "id": "95993db7c9bff44c",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "TokenCreateRQ",
        "func": "var xmlContent = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">TokenCreateRQ</eb:Service>'+\n            '<eb:Action>TokenCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>12345</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">>'+\n            '<wsse:UsernameToken>'+\n              '<wsse:Username>612035</wsse:Username>'+\n              '<wsse:Password>PDAPDA01</wsse:Password>'+\n              '<Organization>LA</Organization>'+\n              '<Domain>LA</Domain>'+\n            '</wsse:UsernameToken>'+\n          '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<sws:TokenCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\" />'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nvar test = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n  '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb = \"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink = \"http://www.w3.org/1999/xlink\" xmlns:xsd = \"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">SessionCreateRQ</eb:Service>'+\n            '<eb:Action>SessionCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>100000-1687876129-611278548@inkcloud.io</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T14:28:49+00:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n        '<wsse:UsernameToken>'+\n          '<wsse:Username>612035</wsse:Username>'+\n          '<wsse:Password>PDAPDA01</wsse:Password>'+\n          '<Organization>LA</Organization>'+\n          '<Domain>LA</Domain>'+\n        '</wsse:UsernameToken>'+\n      '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<SessionCreateRQ returnContextID=\"true\">'+\n      '<POS>'+\n        '<Source PseudoCityCode=\"LA\"/>'+\n      '</POS>'+\n    '</SessionCreateRQ>'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nmsg.headers = {\n  'Content-Type': 'text/xml'\n};\nmsg.payload = test;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "f7355d8347f83ced"
            ]
        ]
    },
    {
        "id": "aa7f1268d5e957c9",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "ACS_AirportFlightListRQ",
        "func": "var xmlFlight = '<soap-env:Envelope xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:v300=\"http://services.sabre.com/ACS/BSO/flightDetail/v3\">'+\n   '<soap-env:Header>'+\n      '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n         '<eb:From>'+\n            '<eb:PartyId type=\"urn:x12.org:IO5:01\">inkcloud.io</eb:PartyId>'+\n         '</eb:From>'+\n         '<eb:To>'+\n            '<eb:PartyId type=\"urn:x12.org:IO5:01\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n         '</eb:To>'+\n         '<eb:CPAId>' + global.get(\"values\").carrier_code +'</eb:CPAId>'+\n         '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n         '<eb:Service eb:type=\"OTA\">ACS_AirportFlightListRQ</eb:Service>'+\n         '<eb:Action>ACS_AirportFlightListRQ</eb:Action>'+\n         '<eb:MessageData>'+\n            '<eb:MessageId>100000-1654041604-10074820@inkcloud.io</eb:MessageId>'+\n            '<eb:Timestamp>2022-06-01T00:00:04+00:00</eb:Timestamp>'+\n         '</eb:MessageData>'+\n      '</eb:MessageHeader>'+\n      '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n   '<wsse:BinarySecurityToken>' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._ +'</wsse:BinarySecurityToken>'+\n      '</wsse:Security>'+\n   '</soap-env:Header>'+\n   '<soap-env:Body>'+\n      '<n1:ACS_AirportFlightListRQ xmlns:n1=\"http://services.sabre.com/ACS/BSO/airportFlightList/v3\">'+\n         '<FlightInfo>'+\n            '<Airline>' + global.get(\"values\").carrier_code +'</Airline>'+\n            '<DepartureDate>' + global.get(\"values\").scheduled_departure_date +'</DepartureDate>'+\n            '<Origin>' + global.get(\"values\").origin_station_iata +'</Origin>'+\n            '<DepartureTimeRange>'+\n               '<StartTime>0001</StartTime>'+\n               '<EndTime>2359</EndTime>'+\n            '</DepartureTimeRange>'+\n         '</FlightInfo>'+\n         '<Client>WEB</Client>'+\n      '</n1:ACS_AirportFlightListRQ>'+\n   '</soap-env:Body>'+\n'</soap-env:Envelope>';\n\nmsg.headers = {\n    'Content-Type': 'text/xml',\n   //'Content-Type': 'multipart/form-data',\n   //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 220,
        "wires": [
            [
                "cade805af52f8127"
            ]
        ]
    },
    {
        "id": "68a1a2496a3e9cb8",
        "type": "xml",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "aa7f1268d5e957c9"
            ]
        ]
    },
    {
        "id": "aa56844f3a4b9608",
        "type": "xml",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1630,
        "y": 220,
        "wires": [
            [
                "b2b1ce57f7664096"
            ]
        ]
    },
    {
        "id": "f26ef747c7ef0f48",
        "type": "change",
        "z": "9af27f59e44970f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "02992799569628ce",
        "type": "link out",
        "z": "9af27f59e44970f6",
        "name": "link out 18",
        "mode": "return",
        "links": [],
        "x": 1895,
        "y": 200,
        "wires": []
    },
    {
        "id": "37dd4563f7c5ce35",
        "type": "http response",
        "z": "9af27f59e44970f6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 260,
        "wires": []
    },
    {
        "id": "518ada0322a50d70",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "Logon",
        "func": "var xmlContent = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n  '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '</s:Header>'+\n    '<s:Body>'+    \n        //'<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            //'<logonRequestData xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n            //    '<a:DomainCode>INKAPP</a:DomainCode>'+\n            //    '<a:AgentName>EXT</a:AgentName>'+\n            //    '<a:Password>t%bRof$FRDXH65$F</a:Password>'+\n            //'</logonRequestData>'+\n    '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            '<logonRequestData>'+\n                '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">inksbdolb</AgentName>'+\n                '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">Volotea23!</Password>'+\n            '</logonRequestData>'+\n        '</LogonRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n  'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlContent2.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 340,
        "wires": [
            [
                "3e1c4948716b8a53"
            ]
        ]
    },
    {
        "id": "9382ec7cdb89ae0e",
        "type": "xml",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "5a7bfc17e8dfe8e2"
            ]
        ]
    },
    {
        "id": "5a7bfc17e8dfe8e2",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n              '<s:Header>'+\n                  '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">0</ContractVersion>'+\n                  '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0] +'</h:Signature>'+\n              '</s:Header>'+\n              '<s:Body>'+\n                  '<GetFlightsRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n            '<getFlightsReqData xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<CarrierCode>TOM</CarrierCode>'+\n                '<FlightNumber i:nil=\"true\">'+\n'</FlightNumber>'+\n                '<DepartureStation>LGW</DepartureStation>'+\n                '<ArrivalStation>'+\n'</ArrivalStation>'+\n                '<StationDateTime>2023-06-30T02:28:08</StationDateTime>'+\n                '<HoursBack>0</HoursBack>'+\n                '<HoursForward>24</HoursForward>'+\n            '</getFlightsReqData>'+\n        '</GetFlightsRequest>'+\n              '</s:Body>'+\n            '</s:Envelope>';\n\nmsg.headers = {\n        'Accept': '*/*',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n        'Connection': 'keep-alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'text/xml; charset=\"utf-8\"',\n        'DNT': '1',\n        //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "6680bddbdc60e540"
            ]
        ]
    },
    {
        "id": "3a749a595e7f2eb6",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n        '<smsapi>'+\n    \t        '<request>get_all_flights_from_origin</request>'+\n                '<connector>'+\n                        '<id>7adbdb16-37eb-4630-b558-adce12785762</id>'+\n                        '<password>b558</password>'+\n                '</connector>'+\n                '<requestdetails>'+\n                        '<origin>CPH</origin>'+\n    \t\t        '<startdate>2023-07-26</startdate>'+\n\t\t        '<enddate>2023-07-27</enddate>'+\n                '</requestdetails>'+\n        '</smsapi>';\n\nmsg.headers2 = {\n        'Accept': 'application/xml',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',        \n        'Connection': 'Keep-Alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'application/xml; charset=\"utf-8\"',\n        //'DNT': '1',\n        //'Host': \".$nav_host,\n        //'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n};\nmsg.headers = {\n        'Content-Type': 'text/xml',\n        //'Content-Type': 'multipart/form-data',\n        //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 440,
        "wires": [
            [
                "b38b0e9db860adf8"
            ]
        ]
    },
    {
        "id": "b38b0e9db860adf8",
        "type": "http request",
        "z": "9af27f59e44970f6",
        "name": "Worldticket http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test-api.worldticket.net/ink-service/ink/test-skywork-gds/getAllFlightsFromOrigin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 440,
        "wires": [
            [
                "9c146a19a1f07b28"
            ]
        ],
        "info": "https://test-api.worldticket.net/ink-service/ink/test-skywork-gds/getAllFlightsFromOrigin"
    },
    {
        "id": "f36349d421e02335",
        "type": "xml",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1130,
        "y": 440,
        "wires": [
            [
                "958c6604be8bfb40",
                "b61f31d65ba0c67c"
            ]
        ]
    },
    {
        "id": "655017e679d9176e",
        "type": "link out",
        "z": "9af27f59e44970f6",
        "name": "link out 20",
        "mode": "return",
        "links": [],
        "x": 1415,
        "y": 400,
        "wires": []
    },
    {
        "id": "8fe39a5f7f4939ce",
        "type": "http response",
        "z": "9af27f59e44970f6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 440,
        "wires": []
    },
    {
        "id": "f7905e69c8de84b8",
        "type": "change",
        "z": "9af27f59e44970f6",
        "name": "Ext Values",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "ext_url",
                "pt": "msg",
                "to": "payload.ext_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "37b3d3d9695a63d4",
                "28585070c2e1d3fa"
            ]
        ]
    },
    {
        "id": "3e1c4948716b8a53",
        "type": "change",
        "z": "9af27f59e44970f6",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "sessionmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "e02ff740d8914eda"
            ]
        ]
    },
    {
        "id": "6680bddbdc60e540",
        "type": "change",
        "z": "9af27f59e44970f6",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "operationmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 340,
        "wires": [
            [
                "c75baf739c5e9704"
            ]
        ]
    },
    {
        "id": "28585070c2e1d3fa",
        "type": "debug",
        "z": "9af27f59e44970f6",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "e02ff740d8914eda",
        "type": "http request",
        "z": "9af27f59e44970f6",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 920,
        "y": 340,
        "wires": [
            [
                "9382ec7cdb89ae0e"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "c75baf739c5e9704",
        "type": "http request",
        "z": "9af27f59e44970f6",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1600,
        "y": 340,
        "wires": [
            [
                "67003af148f27d06"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/operationmanager"
    },
    {
        "id": "bcfdef51d25c0bd0",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys[0].InventoryJourney;\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    url: msg.ext_url,\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 340,
        "wires": [
            [
                "7e20a51bfba4c559"
            ]
        ]
    },
    {
        "id": "67003af148f27d06",
        "type": "xml",
        "z": "9af27f59e44970f6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1790,
        "y": 340,
        "wires": [
            [
                "bcfdef51d25c0bd0"
            ]
        ]
    },
    {
        "id": "f7355d8347f83ced",
        "type": "http request",
        "z": "9af27f59e44970f6",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 220,
        "wires": [
            [
                "68a1a2496a3e9cb8"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "cade805af52f8127",
        "type": "http request",
        "z": "9af27f59e44970f6",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1450,
        "y": 220,
        "wires": [
            [
                "aa56844f3a4b9608"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "b2b1ce57f7664096",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"soap-env:Envelope\"][\"soap-env:Body\"][0][\"ns3:ACS_AirportFlightListRS\"][0].AirportFlightList\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 220,
        "wires": [
            [
                "02992799569628ce",
                "37dd4563f7c5ce35"
            ]
        ]
    },
    {
        "id": "a6902121039fcd04",
        "type": "inject",
        "z": "9af27f59e44970f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "3a749a595e7f2eb6"
            ]
        ]
    },
    {
        "id": "9c146a19a1f07b28",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "Out Flights add",
        "func": "var data = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>'+\n    '<smsapi xmlns:ns2=\"http://www.opentravel.org/OTA/2003/05\">'+\n     '<errcode>000</errcode>'+\n     '<errdescription>'+\n'</errdescription>'+\n    '<flights>'+\n        '<flight>'+\n            '<flightid>SX707|AMS|2022-05-05|CPH</flightid>'+\n            '<flightnumber>SX707</flightnumber>'+\n            '<flightdate>2022/05/05</flightdate>'+\n            '<carrierName>SkyWork Airlines</carrierName>'+\n            '<seat_plan_reference>Y31C0</seat_plan_reference>'+\n            '<opsremarks>'+\n'</opsremarks>'+\n            '<flightlegs>'+\n                '<leg>'+\n                    '<origin>AMS</origin>'+\n                    '<destination>CPH</destination>'+\n                    '<STD>06:00:00</STD>'+\n                    '<STA>07:00:00</STA>'+\n                    '<daydiff>0</daydiff>'+\n                    '<status>ACTIVE</status>'+\n                '</leg>'+\n                '<leg>'+\n                    '<origin>CPH</origin>'+\n                    '<destination>BRN</destination>'+\n                    '<STD>08:00:00</STD>'+\n                    '<STA>09:00:00</STA>'+\n                    '<daydiff>0</daydiff>'+\n                    '<status>ACTIVE</status>'+\n                '</leg>'+\n            '</flightlegs>'+\n        '</flight>'+\n        '<flight>'+\n            '<flightid>SX707|AMS|2022-05-06|CPH</flightid>'+\n            '<flightnumber>SX707</flightnumber>'+\n            '<flightdate>2022/05/06</flightdate>'+\n            '<carrierName>SkyWork Airlines</carrierName>'+\n            '<seat_plan_reference>Y31C0</seat_plan_reference>'+\n            '<opsremarks>'+\n'</opsremarks>'+\n            '<flightlegs>'+\n                '<leg>'+\n                    '<origin>AMS</origin>'+\n                    '<destination>CPH</destination>'+\n                    '<STD>06:00:00</STD>'+\n                    '<STA>07:00:00</STA>'+\n                    '<daydiff>0</daydiff>'+\n                    '<status>ACTIVE</status>'+\n                '</leg>'+\n                '<leg>'+\n                    '<origin>CPH</origin>'+\n                    '<destination>BRN</destination>'+\n                    '<STD>08:00:00</STD>'+\n                    '<STA>09:00:00</STA>'+\n                    '<daydiff>0</daydiff>'+\n                    '<status>ACTIVE</status>'+\n                '</leg>'+\n            '</flightlegs>'+\n        '</flight>'+                \n    '</flights>'+\n'</smsapi>';\n    \nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "f36349d421e02335"
            ]
        ]
    },
    {
        "id": "958c6604be8bfb40",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload.smsapi.flights[0].flight\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 440,
        "wires": [
            [
                "8fe39a5f7f4939ce",
                "655017e679d9176e"
            ]
        ]
    },
    {
        "id": "b61f31d65ba0c67c",
        "type": "debug",
        "z": "9af27f59e44970f6",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 500,
        "wires": []
    },
    {
        "id": "859078537fa2cf2c",
        "type": "link out",
        "z": "9af27f59e44970f6",
        "name": "link out 19",
        "mode": "return",
        "links": [],
        "x": 2345,
        "y": 300,
        "wires": []
    },
    {
        "id": "368d80396d2efe9e",
        "type": "http response",
        "z": "9af27f59e44970f6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2380,
        "y": 340,
        "wires": []
    },
    {
        "id": "7e20a51bfba4c559",
        "type": "loop",
        "z": "9af27f59e44970f6",
        "name": "",
        "kind": "enum",
        "count": "",
        "initial": "1",
        "step": "1",
        "condition": "payload[\"s:Envelope\"][\"s:Body\"][0].GetManifestFilteredResponse[0].Manifest[0].PassengerList",
        "conditionType": "jsonata",
        "when": "before",
        "enumeration": "payload.flights",
        "enumerationType": "msg",
        "limit": "",
        "loopPayload": "loop-val",
        "finalPayload": "final-last",
        "x": 2130,
        "y": 340,
        "wires": [
            [],
            [
                "fd9c908462296913"
            ]
        ]
    },
    {
        "id": "6c443ca45a74b878",
        "type": "function",
        "z": "9af27f59e44970f6",
        "name": "In Baggage add",
        "func": "//msg.payload.result.push({ result: msg.payload.data[0] });\n\n//return msg;\n\n/*var result = []; \nresult = global.get(\"result\"); //to retrieve a variable\n\nmsg.payload.result.push(result);\n//result.push(msg.payload.data[0]);\n//msg.payload.result = context.get(\"result\");\n//context.set(\"result\", result); // to store a variable\n\nreturn msg;\n*/\n//let result = msg.payload.data[0][0];\nif (global.get(\"result\") == undefined) { \n    let result = [msg.payload.data[0][0]];\n    global.set(\"result\", result); // to store a variable\n} else {\n    let result = msg.payload.data[0][0];\n    let append = [global.get(\"result\")][0];\n    append.push(result);\n    global.set(\"result\", append); // to store a variable\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "fd9c908462296913",
        "type": "link call",
        "z": "9af27f59e44970f6",
        "name": "",
        "links": [
            "e4b972b4a4dca602"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2390,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cc268dcf.28791",
        "type": "inject",
        "z": "aee00817.edddf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "53dfeb5d.128d64",
                "51e3ca87.635c04"
            ]
        ]
    },
    {
        "id": "bffe09ed.0900a8",
        "type": "debug",
        "z": "aee00817.edddf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 120,
        "wires": []
    },
    {
        "id": "febd7061.9dd62",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "contain 0",
        "func": "msg.payload = \"payload contains 0\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "bffe09ed.0900a8"
            ]
        ]
    },
    {
        "id": "56726766.6d5378",
        "type": "switch",
        "z": "aee00817.edddf8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "febd7061.9dd62"
            ],
            [
                "caacdaec.dd3248"
            ],
            [
                "49a5f029.e3bdf"
            ],
            [
                "ab6ff83e.4f82a8"
            ]
        ]
    },
    {
        "id": "caacdaec.dd3248",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "contain 1",
        "func": "msg.payload = \"payload contains 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 120,
        "wires": [
            [
                "bffe09ed.0900a8"
            ]
        ]
    },
    {
        "id": "ab6ff83e.4f82a8",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "otherwise",
        "func": "msg.payload = \"payload contains neither 0 nor 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 200,
        "wires": [
            [
                "bffe09ed.0900a8"
            ]
        ]
    },
    {
        "id": "53dfeb5d.128d64",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "Get first digit",
        "func": "msg.payload = msg.payload.toString().slice(-1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "56726766.6d5378"
            ]
        ]
    },
    {
        "id": "51e3ca87.635c04",
        "type": "delay",
        "z": "aee00817.edddf8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "bffe09ed.0900a8"
            ]
        ]
    },
    {
        "id": "49a5f029.e3bdf",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "Not send msg",
        "func": "node.trace(\"not sent\");\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 160,
        "wires": [
            [
                "bffe09ed.0900a8"
            ]
        ]
    },
    {
        "id": "fab953bd.bbc68",
        "type": "inject",
        "z": "aee00817.edddf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "1d8f82f7.ca4e7d"
            ]
        ]
    },
    {
        "id": "1d8f82f7.ca4e7d",
        "type": "function",
        "z": "aee00817.edddf8",
        "name": "Get global, flow, context value",
        "func": "msg.payload = {\n    global: global.get(\"global\") || \"undefined\",\n    flow: flow.get(\"flow\") || \"undefined\",\n    context: context.get(\"context\") || \"undefined\",\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 340,
        "wires": [
            [
                "189e6bb.90d9b94"
            ]
        ]
    },
    {
        "id": "189e6bb.90d9b94",
        "type": "debug",
        "z": "aee00817.edddf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "2c6873d2.992abc",
        "type": "mqtt out",
        "z": "4fbc02c1.58290c",
        "name": "",
        "topic": "sensors-et/livingroom/temp1",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "407a01e4.6b637",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "d9beed59.94155",
        "type": "inject",
        "z": "4fbc02c1.58290c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "22",
        "payloadType": "num",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "29d760365102e9ce"
            ]
        ]
    },
    {
        "id": "be80048.8f232f8",
        "type": "mqtt in",
        "z": "4fbc02c1.58290c",
        "name": "",
        "topic": "sensors-et/livingroom/temp1",
        "qos": "2",
        "datatype": "auto",
        "broker": "407a01e4.6b637",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 470,
        "y": 360,
        "wires": [
            [
                "8640b8ff.f82ff8"
            ]
        ]
    },
    {
        "id": "8640b8ff.f82ff8",
        "type": "debug",
        "z": "4fbc02c1.58290c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "29d760365102e9ce",
        "type": "function",
        "z": "4fbc02c1.58290c",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "2c6873d2.992abc"
            ]
        ]
    },
    {
        "id": "75d20fdf296c38d2",
        "type": "http in",
        "z": "c763acb693edbb24",
        "name": "flights",
        "url": "/flights",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "50a0121ce68755de"
            ]
        ]
    },
    {
        "id": "b5d26344ebd0a2a6",
        "type": "link in",
        "z": "c763acb693edbb24",
        "name": "link Flight Details",
        "links": [],
        "x": 185,
        "y": 400,
        "wires": [
            [
                "50a0121ce68755de"
            ]
        ]
    },
    {
        "id": "860925b51f40194d",
        "type": "switch",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload.external",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sabre",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "navitaire",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "worldticket",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "2fd5d3ea1bf17b73"
            ],
            [
                "db903b768231089f"
            ],
            [
                "10359d405db8ddd9"
            ]
        ]
    },
    {
        "id": "2fd5d3ea1bf17b73",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "TokenCreateRQ",
        "func": "var xmlContent = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsd=\"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">TokenCreateRQ</eb:Service>'+\n            '<eb:Action>TokenCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>12345</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">>'+\n            '<wsse:UsernameToken>'+\n              '<wsse:Username>612035</wsse:Username>'+\n              '<wsse:Password>PDAPDA01</wsse:Password>'+\n              '<Organization>LA</Organization>'+\n              '<Domain>LA</Domain>'+\n            '</wsse:UsernameToken>'+\n          '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<sws:TokenCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\" />'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nvar test = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n  '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb = \"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink = \"http://www.w3.org/1999/xlink\" xmlns:xsd = \"http://www.w3.org/1999/XMLSchema\">'+\n        '<SOAP-ENV:Header>'+\n          '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n            '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n            '<eb:From>'+\n                '<eb:PartyId type=\"URI\">inkcloud.io</eb:PartyId>'+\n            '</eb:From>'+\n            '<eb:To>'+\n                '<eb:PartyId type=\"URI\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n            '</eb:To>'+\n            '<eb:CPAId>LA</eb:CPAId>'+\n            '<eb:Service eb:type=\"OTA\">SessionCreateRQ</eb:Service>'+\n            '<eb:Action>SessionCreateRQ</eb:Action>'+\n            '<eb:MessageData>'+\n                '<eb:MessageId>100000-1687876129-611278548@inkcloud.io</eb:MessageId>'+\n                '<eb:Timestamp>2023-06-27T14:28:49+00:00</eb:Timestamp>'+\n            '</eb:MessageData>'+\n          '</eb:MessageHeader>'+\n          '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n        '<wsse:UsernameToken>'+\n          '<wsse:Username>612035</wsse:Username>'+\n          '<wsse:Password>PDAPDA01</wsse:Password>'+\n          '<Organization>LA</Organization>'+\n          '<Domain>LA</Domain>'+\n        '</wsse:UsernameToken>'+\n      '</wsse:Security>'+\n        '</SOAP-ENV:Header>'+\n        '<SOAP-ENV:Body>'+\n          '<SessionCreateRQ returnContextID=\"true\">'+\n      '<POS>'+\n        '<Source PseudoCityCode=\"LA\"/>'+\n      '</POS>'+\n    '</SessionCreateRQ>'+\n        '</SOAP-ENV:Body>'+\n      '</SOAP-ENV:Envelope>';\n\nmsg.headers = {\n  'Content-Type': 'text/xml'\n};\nmsg.payload = test;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 340,
        "wires": [
            [
                "cd38d925cd939977"
            ]
        ]
    },
    {
        "id": "9ac9975ee1377d41",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "ACS_FlightDetailRQ",
        "func": "var xmlFlight_old = '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:sec=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:mes=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:v300=\"http://services.sabre.com/ACS/BSO/flightDetail/v3\">' +\n   '<soapenv:Header>' +\n      '<eb:MessageHeader eb:id=\"\" eb:version=\"1.0\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\">' +\n         '<eb:From>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:From>' +\n         '<eb:To>' +\n            '<eb:PartyId eb:type=\"URI\">inkcloud.io</eb:PartyId>' +\n         '</eb:To>' +\n         '<eb:CPAId>LA</eb:CPAId>' +\n         '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>' +\n         '<eb:Service eb:type=\"OTA\">ACS_FlightDetailRQ</eb:Service>' +\n         '<eb:Action>ACS_FlightDetailRQ</eb:Action>' +\n         '<eb:MessageData>' +\n            '<eb:MessageId>12345</eb:MessageId>' +\n            '<eb:Timestamp>2023-06-27T17:08:00</eb:Timestamp>' +\n         '</eb:MessageData>' +\n      '</eb:MessageHeader>' +\n      '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">' +\n      //'<wsse:BinarySecurityToken EncodingType=\"wsse:Base64Binary\" valueType=\"String\">T1RLAQJ5UpwPtdFdie1LP+YHkDDF9nydZQr6fmKyhZtET56C7xBSMqDvsPH/hppkl5Y0GAXoAADQfMZMS/zqCd5wQXVJj9eTY/GU0hhHya8f0LvnyQSbcAWdYFOOVVuio6h9rvz9rd+emW0EL9MMgR31aXd37qKajVN8UFgTvzBx4vZEswCXMrDnHk8W/7tYxPpAEHl8a3cI/8CSXJwRW0ip15i2+td+VkqGD1yO+KDPW4oUOiuUiG/3pwp5BarcCntrolxHjCoYlNhLSzOvqKuI4lF9qgrfBVb/9L5GKIikR9aZSP6x5tMb/9OIcKbS/fB/8tFBWBAi108oWp5NoS7QEsmNg6F0jQ**</wsse:BinarySecurityToken>' +\n      '<wsse:BinarySecurityToken valueType=\"String\" EncodingType=\"wsse:Base64Binary\">' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._+'</wsse:BinarySecurityToken>'+\n      '</wsse:Security>' +\n   '</soapenv:Header>' +\n   '<soapenv:Body>' +\n      '<v300:ACS_FlightDetailRQ>' +\n         '<FlightInfo>' +\n            '<Airline>'+ global.get(\"values\").carrier_code+'</Airline>' +\n            //'<Flight>'+ global.get(\"values\").flight_number +'</Flight>' +\n            '<DepartureDate>'+ global.get(\"values\").scheduled_departure_date +'</DepartureDate>' +\n            //'<Origin>'+ global.get(\"values\").origin_station_iata +'</Origin>' +\n         '</FlightInfo>' +\n         '<Client>KIOSK</Client>' +\n      '</v300:ACS_FlightDetailRQ>' +\n   '</soapenv:Body>' +\n   '</soapenv:Envelope>';\nvar xmlFlight = '<soap-env:Envelope xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:v300=\"http://services.sabre.com/ACS/BSO/flightDetail/v3\">'+\n   '<soap-env:Header>'+\n             '<eb:MessageHeader SOAP-ENV:mustUnderstand=\"1\" eb:version=\"1.0\">'+\n               '<eb:From>'+\n                 '<eb:PartyId type=\"urn:x12.org:IO5:01\">inkcloud.io</eb:PartyId>'+\n               '</eb:From>'+\n               '<eb:To>'+\n                 '<eb:PartyId type=\"urn:x12.org:IO5:01\">sws-crt-as.cert.havail.sabre.com</eb:PartyId>'+\n               '</eb:To>'+\n               '<eb:CPAId>LA</eb:CPAId>'+\n               '<eb:ConversationId>100000@inkcloud.io</eb:ConversationId>'+\n               '<eb:Service eb:type=\"OTA\">ACS_FlightDetailRQ</eb:Service>'+\n               '<eb:Action>ACS_FlightDetailRQ</eb:Action>'+\n               '<eb:MessageData>'+\n                 '<eb:MessageId>100000-1654040819-885791657@inkcloud.io</eb:MessageId>'+\n                 '<eb:Timestamp>2022-05-31T23:46:59+00:00</eb:Timestamp>'+\n               '</eb:MessageData>'+\n             '</eb:MessageHeader>'+\n             '<wsse:Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/12/utility\">'+\n   '<wsse:BinarySecurityToken valueType = \"String\" EncodingType = \"wsse:Base64Binary\"> ' + msg.payload[\"soap-env:Envelope\"][\"soap-env:Header\"][0][\"wsse:Security\"][0][\"wsse:BinarySecurityToken\"][0]._+'</wsse:BinarySecurityToken>'+\n         '</wsse:Security>'+\n           '</soap-env:Header>'+\n   '<soap-env:Body>'+\n      '<v300:ACS_FlightDetailRQ>'+\n         '<FlightInfo>'+\n            '<Airline>' + global.get(\"values\").carrier_code + '</Airline>' +\n            '<Flight>' + global.get(\"values\").flight_number + '</Flight>' +\n            '<DepartureDate>' + global.get(\"values\").scheduled_departure_date + '</DepartureDate>' +\n            '<Origin>' + global.get(\"values\").origin_station_iata + '</Origin>' +\n         '</FlightInfo>'+\n         '<Client>KIOSK</Client>'+\n      '</v300:ACS_FlightDetailRQ>'+\n   '</soap-env:Body>'+\n         '</soap-env:Envelope>';\nmsg.headers = {\n    'Content-Type': 'text/xml',\n   //'Content-Type': 'multipart/form-data',\n   //'Content-Length': xmlContent2.length\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 340,
        "wires": [
            [
                "ea776fbced5a4c97"
            ]
        ]
    },
    {
        "id": "640a2c6ee4e7dfb5",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1090,
        "y": 340,
        "wires": [
            [
                "9ac9975ee1377d41"
            ]
        ]
    },
    {
        "id": "043f8f27ce18d72f",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1690,
        "y": 340,
        "wires": [
            [
                "69a5582ed4671bfd",
                "bca94d70b0c0d78e"
            ]
        ]
    },
    {
        "id": "84616b677e5d8502",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "46fd988d9f9a1612",
        "type": "link out",
        "z": "c763acb693edbb24",
        "name": "link out 21",
        "mode": "return",
        "links": [],
        "x": 1955,
        "y": 320,
        "wires": []
    },
    {
        "id": "042749fb36cf0c39",
        "type": "http response",
        "z": "c763acb693edbb24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1990,
        "y": 380,
        "wires": []
    },
    {
        "id": "db903b768231089f",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "Logon",
        "func": "var xmlContent = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n  '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '</s:Header>'+\n    '<s:Body>'+    \n        //'<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            //'<logonRequestData xmlns:a=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n            //    '<a:DomainCode>INKAPP</a:DomainCode>'+\n            //    '<a:AgentName>EXT</a:AgentName>'+\n            //    '<a:Password>t%bRof$FRDXH65$F</a:Password>'+\n            //'</logonRequestData>'+\n    '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n            '<logonRequestData>'+\n                '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">inksbdolb</AgentName>'+\n                '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">Volotea23!</Password>'+\n            '</logonRequestData>'+\n        '</LogonRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n  'Accept': '*/*',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    'Connection': 'keep-alive',\n    'Content-Length': xmlContent2.length,\n    'Content-Type': 'text/xml; charset=\"utf-8\"',\n    'DNT': '1',\n    //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 460,
        "wires": [
            [
                "aacc635aa58e9164"
            ]
        ]
    },
    {
        "id": "717b055d917dfdf6",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1170,
        "y": 460,
        "wires": [
            [
                "57b6b2cdca17c32f"
            ]
        ]
    },
    {
        "id": "57b6b2cdca17c32f",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n   '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n    '<s:Header>'+\n        '<h:ContractVersion xmlns:h=\"http://schemas.navitaire.com/WebServices\">44</h:ContractVersion>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0]+'</h:Signature>'+\n    '</s:Header>'+\n    '<s:Body>'+\n        '<GetFlightsRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n            '<getFlightsReqData xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<CarrierCode>'+ global.get(\"values\").carrier_code +'</CarrierCode>'+\n                //'<FlightNumber i:nil=\"true\">'+ global.get(\"values\").flight_number +'</FlightNumber>'+\n                '<FlightNumber i:nil=\"true\"></FlightNumber>' +\n                '<DepartureStation>'+ global.get(\"values\").origin_station_iata +'</DepartureStation>'+\n                //'<ArrivalStation>DEN</ArrivalStation>'+\n                '<StationDateTime>'+ global.get(\"values\").scheduled_departure_date +'</StationDateTime>'+\n                '<HoursBack>0</HoursBack>'+\n                '<HoursForward>24</HoursForward>'+\n            '</getFlightsReqData>'+\n        '</GetFlightsRequest>'+\n    '</s:Body>'+\n'</s:Envelope>';\n\nmsg.headers = {\n        'Accept': '*/*',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n        'Connection': 'keep-alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'text/xml; charset=\"utf-8\"',\n        'DNT': '1',\n        //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 460,
        "wires": [
            [
                "a17ecb379d75b120"
            ]
        ]
    },
    {
        "id": "c6c126d1be31e5e9",
        "type": "link out",
        "z": "c763acb693edbb24",
        "name": "link out 22",
        "mode": "return",
        "links": [],
        "x": 2115,
        "y": 420,
        "wires": []
    },
    {
        "id": "ff7ef9104fdcc3ee",
        "type": "http response",
        "z": "c763acb693edbb24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2150,
        "y": 460,
        "wires": []
    },
    {
        "id": "10359d405db8ddd9",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'+\n        '<smsapi>'+\n    \t        '<request>get_all_flights_from_origin</request>'+\n                '<connector>'+\n                        '<id>7adbdb16-37eb-4630-b558-adce12785762</id>'+\n                        '<password>b558</password>'+\n                '</connector>'+\n                '<requestdetails>'+\n                        '<origin>' + global.get(\"values\").origin_station_iata +'</origin>'+\n    \t\t        '<startdate>2023-07-07</startdate>'+\n\t\t        '<enddate>2023-07-09</enddate>'+\n                '</requestdetails>'+\n        '</smsapi>';\n\nmsg.headers = {\n        'Accept': 'application/xml',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',        \n        'Connection': 'Keep-Alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'application/xml; charset=\"utf-8\"',\n        //'DNT': '1',\n        //'Host': \".$nav_host,\n        //'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "b3d52f0533bf2761"
            ]
        ]
    },
    {
        "id": "b3d52f0533bf2761",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Worldticket http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/getAllFlightsFromOrigin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 560,
        "wires": [
            [
                "099207c9fa58fa70"
            ]
        ],
        "info": "https://test-api.worldticket.net/ink-service/ink/test-skywork-gds/getAllFlightsFromOrigin"
    },
    {
        "id": "099207c9fa58fa70",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1110,
        "y": 560,
        "wires": [
            [
                "188a890eb20dcda0"
            ]
        ]
    },
    {
        "id": "188a890eb20dcda0",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1250,
        "y": 560,
        "wires": [
            [
                "7f5ed92494e7d545",
                "889dbba72e5443d4"
            ]
        ]
    },
    {
        "id": "7f5ed92494e7d545",
        "type": "link out",
        "z": "c763acb693edbb24",
        "name": "link out 23",
        "mode": "return",
        "links": [],
        "x": 1375,
        "y": 520,
        "wires": []
    },
    {
        "id": "889dbba72e5443d4",
        "type": "http response",
        "z": "c763acb693edbb24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1400,
        "y": 560,
        "wires": []
    },
    {
        "id": "50a0121ce68755de",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Ext Values",
        "rules": [
            {
                "t": "set",
                "p": "values",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "ext_url",
                "pt": "msg",
                "to": "payload.ext_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "860925b51f40194d",
                "c4b016b65b4fc3ea"
            ]
        ]
    },
    {
        "id": "5e1858ebea467310",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 520,
        "wires": []
    },
    {
        "id": "aacc635aa58e9164",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "sessionmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "17f9434d5e3a907c"
            ]
        ]
    },
    {
        "id": "a17ecb379d75b120",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "operationmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 460,
        "wires": [
            [
                "121a108cb73f79d2"
            ]
        ]
    },
    {
        "id": "c4b016b65b4fc3ea",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 320,
        "wires": []
    },
    {
        "id": "17f9434d5e3a907c",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 460,
        "wires": [
            [
                "717b055d917dfdf6"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "121a108cb73f79d2",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}/{{{action}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1660,
        "y": 460,
        "wires": [
            [
                "6dbdacfb10b2c728"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/operationmanager"
    },
    {
        "id": "cb4b7f1f87a27c86",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys[0].InventoryJourney\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 460,
        "wires": [
            [
                "c6c126d1be31e5e9",
                "ff7ef9104fdcc3ee",
                "5e1858ebea467310"
            ]
        ]
    },
    {
        "id": "6dbdacfb10b2c728",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1850,
        "y": 460,
        "wires": [
            [
                "cb4b7f1f87a27c86",
                "355ffc7f8fcd2288"
            ]
        ]
    },
    {
        "id": "cd38d925cd939977",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 340,
        "wires": [
            [
                "640a2c6ee4e7dfb5"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "ea776fbced5a4c97",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{ext_url}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1510,
        "y": 340,
        "wires": [
            [
                "043f8f27ce18d72f"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "bca94d70b0c0d78e",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 260,
        "wires": []
    },
    {
        "id": "69a5582ed4671bfd",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "Decode",
        "func": "// Acceder a los datos del objeto JavaScript\n//var flights = msg.payload[\"s:Envelope\"][\"s:Body\"][0].GetFlightsResponse[0].getFlightsRespData[0].Schedule[0].ItineraryJourneyDateMarket[0].Journeys\nvar flights = msg.payload[\"soap-env:Envelope\"][\"soap-env:Body\"][0][\"ns3:ACS_FlightDetailRS\"]\n// Crear un nuevo mensaje con los datos extraídos\nmsg.payload = {\n    flights: flights\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 340,
        "wires": [
            [
                "46fd988d9f9a1612",
                "042749fb36cf0c39"
            ]
        ]
    },
    {
        "id": "8b2d9faeec666ffa",
        "type": "link in",
        "z": "c763acb693edbb24",
        "name": "link in Flights",
        "links": [],
        "x": 615,
        "y": 400,
        "wires": [
            [
                "b4721b5cfa2b30ee"
            ]
        ]
    },
    {
        "id": "b4721b5cfa2b30ee",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Ext Values",
        "rules": [
            {
                "t": "set",
                "p": "values.carrier_code",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].FlightDesignator[0][\"a:CarrierCode\"][0]",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "values.origin_station_iata",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].DepartureStation[0]",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "values.scheduled_departure_date",
                "pt": "global",
                "to": "payload.Segments[0].InventorySegment[0].STD[0]",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 400,
        "wires": [
            [
                "db903b768231089f"
            ]
        ]
    },
    {
        "id": "355ffc7f8fcd2288",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 540,
        "wires": []
    },
    {
        "id": "4f52d5b2e314a6f5",
        "type": "inject",
        "z": "c763acb693edbb24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "caea879e5e9fae18"
            ]
        ]
    },
    {
        "id": "caea879e5e9fae18",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "Logon",
        "func": "var xmlContent = '{\"applicationName\": \"\",\"credentials\": {\"username\": \"APIINNOVIINK\",\"alternateIdentifier\": \"INNOVINK12\",\"password\": \"Smart@321\",\"domain\": \"EX\",\"location\": \"\",\"loginRole\": \"GHDM\"';\nvar xmlContent2 = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">'+\n        '<s:Header>'+\n            '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n            '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n        '</s:Header>'+\n        '<s:Body>'+\n            '<LogonRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService\">'+\n                '<logonRequestData>'+\n                    '<DomainCode xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">EXT</DomainCode>'+\n                    '<AgentName xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">INKAPP</AgentName>'+\n                    '<Password xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Session\">t%bRof$FRDXH65$F</Password>'+\n                '</logonRequestData>'+\n            '</LogonRequest>'+\n        '</s:Body>'+\n    '</s:Envelope>';\nmsg.headers = {  \n    'Accept': 'application/json',\n    //'Accept-Encoding': 'gzip, deflate, br',\n    //'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n    //'Connection': 'keep-alive',\n    //'Content-Length': xmlContent2.length,\n    'Content-Type': 'application/json',\n    //'DNT': '1',\n    //'Host': \".$nav_host,\n    //'SOAPAction': 'http://schemas.navitaire.com/WebServices/ISessionManager/Logon',\n    //'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlContent;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "17a66aaccc3f6fb5"
            ]
        ]
    },
    {
        "id": "c23162b056564cc1",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://test.api.tui/flight/newskies/soap/operationmanager",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1360,
        "y": 760,
        "wires": [
            [
                "19eda50400c82c90"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "19eda50400c82c90",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 930,
        "y": 860,
        "wires": [
            [
                "0ec32d88f2f6d24e"
            ]
        ]
    },
    {
        "id": "93df82c57afd2006",
        "type": "xml",
        "z": "c763acb693edbb24",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 850,
        "y": 760,
        "wires": [
            [
                "5ddde91ff71af913"
            ]
        ]
    },
    {
        "id": "5ddde91ff71af913",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "GetFlights",
        "func": "var xmlFlight = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'+\n    '<s:Envelope xmlns:s = \"http://schemas.xmlsoap.org/soap/envelope/\">'+\n              '<s:Header>'+\n                  '<ContractVersion xmlns=\"http://schemas.navitaire.com/WebServices\">44</ContractVersion>'+\n                  '<EnableExceptionStackTrace xmlns=\"http://schemas.navitaire.com/WebServices\">false</EnableExceptionStackTrace>'+\n    '<h:Signature xmlns:h=\"http://schemas.navitaire.com/WebServices\">' + msg.payload[\"s:Envelope\"][\"s:Body\"][0].LogonResponse[0].Signature[0] +'</h:Signature>'+\n              '</s:Header>'+\n              '<s:Body>'+\n                  '<GetFlightsRequest xmlns=\"http://schemas.navitaire.com/WebServices/ServiceContracts/OperationService\">'+\n            '<getFlightsReqData xmlns=\"http://schemas.navitaire.com/WebServices/DataContracts/Operation\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">'+\n                '<CarrierCode>OR</CarrierCode>'+\n                '<FlightNumber i:nil=\"true\"></FlightNumber>'+\n                '<DepartureStation>AMS</DepartureStation>'+\n                '<ArrivalStation>'+\n'</ArrivalStation>'+\n                '<StationDateTime>2023-07-11T00:00:00</StationDateTime>'+\n                '<HoursBack>0</HoursBack>'+\n                '<HoursForward>24</HoursForward>'+\n            '</getFlightsReqData>'+\n        '</GetFlightsRequest>'+\n              '</s:Body>'+\n            '</s:Envelope>';\n\nmsg.headers = {\n        'Accept': '*/*',\n        //'Accept-Encoding': 'gzip, deflate, br',\n        'Accept-Language': 'es-ES,en-US;q=0.8,es;q=0.5,en;q=0.3',\n        'Connection': 'keep-alive',\n        'Content-Length': xmlFlight.length,\n        'Content-Type': 'text/xml; charset=\"utf-8\"',\n        'DNT': '1',\n        //'Host': \".$nav_host,\n    'SOAPAction': 'http://schemas.navitaire.com/WebServices/IOperationManager/GetFlights',\n    'cache-control': 'no-cache'\n};\n\nmsg.payload = xmlFlight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "fae32d62e8ae383f"
            ]
        ]
    },
    {
        "id": "fae32d62e8ae383f",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "operationmanager",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 760,
        "wires": [
            [
                "c23162b056564cc1"
            ]
        ]
    },
    {
        "id": "17a66aaccc3f6fb5",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Navitaire http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 760,
        "wires": [
            [
                "93df82c57afd2006"
            ]
        ],
        "info": "https://test.api.tui/flight/newskies/soap/sessionmanager"
    },
    {
        "id": "0ec32d88f2f6d24e",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 860,
        "wires": []
    },
    {
        "id": "6790b0fc28e52a60",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c8107088.37ef9",
        "type": "http in",
        "z": "c763acb693edbb24",
        "name": "",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 450,
        "y": 1020,
        "wires": [
            [
                "4e8237da.b17dc8"
            ]
        ]
    },
    {
        "id": "4e8237da.b17dc8",
        "type": "template",
        "z": "c763acb693edbb24",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"applicationName\": \"Flyadeal\",\n  \"credentials\": {\n    \"username\": \"APIINNOVIINK\",\n    \"alternateIdentifier\": \"\",\n    \"password\": \"Smart@321\",\n    \"domain\": \"EX\",\n    \"location\": \"\",\n    \"loginRole\": \"GHDM\"\n  }",
        "x": 830,
        "y": 1020,
        "wires": [
            [
                "65401623.9abfe8"
            ]
        ]
    },
    {
        "id": "65401623.9abfe8",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "f7d3e35a.082c2",
                "6790b0fc28e52a60"
            ]
        ]
    },
    {
        "id": "f7d3e35a.082c2",
        "type": "http response",
        "z": "c763acb693edbb24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bbd032b6b9b11b7a",
        "type": "inject",
        "z": "c763acb693edbb24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 1100,
        "wires": [
            [
                "212c01f789d1328b",
                "56e6096cea2e4ce5",
                "5f92001de1fa1105",
                "71bf333a0d97c4f2"
            ]
        ]
    },
    {
        "id": "31bec7e7c0fadcc1",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "tls": "",
        "persist": false,
        "proxy": "4c526fe77f965961",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Ocp-Apim-Subscription-Key",
                "valueType": "other",
                "valueValue": "761c07f638df45b788bfc4a04308772f"
            }
        ],
        "x": 490,
        "y": 1100,
        "wires": [
            [
                "a7217ee69183d2ea"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "5f92001de1fa1105",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "Logon",
        "func": "var xmlContent2 = '{'+\n    '\"applicationName\": \"Flyadeal\",'+\n    '\"credentials\": {'+\n        '\"username\": \"APIINNOVIINK\",'+\n        '\"alternateIdentifier\": \"\",'+\n        '\"password\": \"Smart@321\",'+\n        '\"domain\": \"EX\",'+\n        '\"location\": \"\",'+\n        '\"loginRole\": \"GHDM\"'+\n  '}';\n\nmsg.payload = xmlContent2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "c55a3330dd484fcc",
        "type": "change",
        "z": "c763acb693edbb24",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Ocp-Apim-Subscription-Key",
                "pt": "msg",
                "to": "761c07f638df45b788bfc4a04308772f",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "93721eac89e5e007",
                "9464af5805be7967"
            ]
        ]
    },
    {
        "id": "a7217ee69183d2ea",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1100,
        "wires": []
    },
    {
        "id": "56e6096cea2e4ce5",
        "type": "template",
        "z": "c763acb693edbb24",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"applicationName\": \"Flyadeal\",\n  \"credentials\": {\n    \"username\": \"APIINNOVIINK\",\n    \"alternateIdentifier\": \"\",\n    \"password\": \"Smart@321\",\n    \"domain\": \"EX\",\n    \"location\": \"\",\n    \"loginRole\": \"GHDM\"\n  }",
        "x": 290,
        "y": 1160,
        "wires": [
            [
                "c55a3330dd484fcc",
                "31bec7e7c0fadcc1"
            ]
        ]
    },
    {
        "id": "92611b03f32abc17",
        "type": "http-proxy",
        "z": "c763acb693edbb24",
        "name": "",
        "url": "192.168.56.5:5002",
        "incomingTimeout": "200",
        "outgoingTimeout": "200",
        "changeOrigin": false,
        "preserveHeaderKeyCase": false,
        "verifyCertificates": false,
        "followRedirects": false,
        "toProxy": false,
        "xfwd": false,
        "x": 310,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9464af5805be7967",
        "type": "www-request",
        "z": "c763acb693edbb24",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/v1/token",
        "proxyip": "192.168.56.5",
        "proxyport": "5002",
        "proxytype": "",
        "timeout": "",
        "follow-redirects": true,
        "tls": "",
        "tunneling": true,
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "816e5a9afc89a155"
            ]
        ]
    },
    {
        "id": "93721eac89e5e007",
        "type": "www-request",
        "z": "c763acb693edbb24",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/swagger/index.html",
        "proxyip": "192.168.56.5",
        "proxyport": "5002",
        "proxytype": "",
        "timeout": "",
        "follow-redirects": true,
        "tls": "",
        "tunneling": true,
        "x": 670,
        "y": 1300,
        "wires": [
            [
                "3bca07a4bae2858a"
            ]
        ]
    },
    {
        "id": "212c01f789d1328b",
        "type": "ssh-client",
        "z": "c763acb693edbb24",
        "debug": false,
        "ssh": "/home/dev/.ink/devbox/config/ssh.config",
        "hostname": "192.168.56.5:5002",
        "name": "jorge.rodriguez@development",
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "476799946fd4ad59"
            ]
        ]
    },
    {
        "id": "476799946fd4ad59",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0a5f2471f462ed54",
        "type": "ssh-v3",
        "z": "c763acb693edbb24",
        "name": "",
        "conf": "75a1b14b5ba38445",
        "debug": false,
        "x": 175,
        "y": 1380,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "816e5a9afc89a155",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3bca07a4bae2858a",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f58a6abe24951f9a",
        "type": "exec",
        "z": "c763acb693edbb24",
        "command": " ssh -D 0.0.0.0:5002 -F /home/dev/.ink/devbox/config/ssh.config jorge.rodriguez@development",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "781490d590924c1f",
                "ee94121ccdc99596"
            ],
            [
                "4d657e1e2ad37d94",
                "ee94121ccdc99596"
            ],
            [
                "4383434e9bdcef51",
                "ee94121ccdc99596"
            ]
        ]
    },
    {
        "id": "781490d590924c1f",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4d657e1e2ad37d94",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1480,
        "wires": []
    },
    {
        "id": "4383434e9bdcef51",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ee94121ccdc99596",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "tls": "",
        "persist": false,
        "proxy": "4c526fe77f965961",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Ocp-Apim-Subscription-Key",
                "valueType": "other",
                "valueValue": "761c07f638df45b788bfc4a04308772f"
            }
        ],
        "x": 590,
        "y": 1560,
        "wires": [
            [
                "ab3c21d67e9c0a43"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "ab3c21d67e9c0a43",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1600,
        "wires": []
    },
    {
        "id": "71bf333a0d97c4f2",
        "type": "ssh-client-v2",
        "z": "c763acb693edbb24",
        "debug": true,
        "ssh": "/home/dev/.ink/devbox/config/ssh.config",
        "hostname": "https://3cfd-46-26-120-213.ngrok-free.app/:5002",
        "name": "development",
        "x": 190,
        "y": 1620,
        "wires": [
            [
                "f58a6abe24951f9a"
            ]
        ]
    },
    {
        "id": "0981130311150ee8",
        "type": "ssh-client",
        "z": "c763acb693edbb24",
        "debug": true,
        "ssh": "/home/dev/.ssh/ink-devbox",
        "hostname": "192.168.56.5:5002",
        "name": "development",
        "x": 470,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "26cbbd9039e792eb",
        "type": "inject",
        "z": "c763acb693edbb24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1740,
        "wires": [
            [
                "1d6f93e945e16c14",
                "b01a1d924e06207f",
                "193c15e4964ae123"
            ]
        ]
    },
    {
        "id": "b01a1d924e06207f",
        "type": "function",
        "z": "c763acb693edbb24",
        "name": "function 1",
        "func": "// Importar la biblioteca ssh2\nvar Client = require('ssh2').Client;\n\n// Crear nueva instancia de cliente SSH\nvar conn = new Client();\n\n// Configurar opciones para la conexión SSH\nvar sshConfig = {\n    host: '192.168.56.5',   // Dirección IP del servidor SSH\n    port: 22,               // Puerto SSH del servidor (por lo general, 22)\n    username: 'dev', // Nombre de usuario para la conexión SSH\n    privateKey: '/home/dev/.ssh/ink-devbox' // Ruta a tu clave privada (ejemplo: '/home/tu_usuario/.ssh/id_rsa')\n};\n\n// Establecer conexión SSH\nconn.on('ready', function () {\n    console.log('Conexión SSH establecida');\n\n    // Aquí puedes ejecutar comandos en el servidor remoto, por ejemplo:\n    conn.exec('ls', function (err, stream) {\n        if (err) throw err;\n        stream.on('close', function (code, signal) {\n            console.log('Comando ejecutado con éxito');\n            conn.end(); // Cerrar la conexión SSH después de ejecutar el comando\n        }).on('data', function (data) {\n            console.log('Salida del comando: ' + data);\n        }).stderr.on('data', function (data) {\n            console.log('Error del comando: ' + data);\n        });\n    });\n}).connect(sshConfig);\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1740,
        "wires": [
            [
                "b5515593f663275b"
            ]
        ]
    },
    {
        "id": "b5515593f663275b",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1820,
        "wires": []
    },
    {
        "id": "193c15e4964ae123",
        "type": "ssh-client",
        "z": "c763acb693edbb24",
        "debug": false,
        "ssh": "",
        "hostname": "3cfd-46-26-120-213.ngrok-free.app:22",
        "name": "",
        "x": 260,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "1d6f93e945e16c14",
        "type": "sshexec",
        "z": "c763acb693edbb24",
        "name": "",
        "sshccfg": "0773b0b6827c621b",
        "command": "ssh -D 0.0.0.0:5002 -F home/dev/.ink/devbox/config/ssh.config jorge.rodriguez@development",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "sigint": false,
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "febf8d113142f047"
            ],
            [
                "703c4567c5165871"
            ],
            [
                "d6f4f0a16b4bfa2b"
            ]
        ]
    },
    {
        "id": "febf8d113142f047",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1640,
        "wires": []
    },
    {
        "id": "703c4567c5165871",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d6f4f0a16b4bfa2b",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1720,
        "wires": []
    },
    {
        "id": "6e75150404c542ed",
        "type": "exec",
        "z": "c763acb693edbb24",
        "command": "ssh ink-devbox",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 260,
        "y": 1880,
        "wires": [
            [
                "967be77b02298e07"
            ],
            [
                "967be77b02298e07"
            ],
            [
                "967be77b02298e07"
            ]
        ]
    },
    {
        "id": "ce6f3f2f046f502c",
        "type": "inject",
        "z": "c763acb693edbb24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 1880,
        "wires": [
            [
                "6e75150404c542ed"
            ]
        ]
    },
    {
        "id": "1ced418c13f23637",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1920,
        "wires": []
    },
    {
        "id": "ae4293bf36f4a984",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1840,
        "wires": []
    },
    {
        "id": "fa5999d395a2dbc1",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1880,
        "wires": []
    },
    {
        "id": "8beceed13a9212d2",
        "type": "http request",
        "z": "c763acb693edbb24",
        "name": "Sabre http request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "tls": "",
        "persist": false,
        "proxy": "4c526fe77f965961",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Ocp-Apim-Subscription-Key",
                "valueType": "other",
                "valueValue": "761c07f638df45b788bfc4a04308772f"
            }
        ],
        "x": 490,
        "y": 1960,
        "wires": [
            [
                "4ddd6aab4ec6d62f"
            ]
        ],
        "info": "https://sws-crt-as.cert.havail.sabre.com"
    },
    {
        "id": "967be77b02298e07",
        "type": "exec",
        "z": "c763acb693edbb24",
        "command": " ssh -D 0.0.0.0:5002 -F /home/dev/.ink/devbox/config/ssh.config jorge.rodriguez@development",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 700,
        "y": 1880,
        "wires": [
            [
                "ae4293bf36f4a984",
                "8beceed13a9212d2",
                "0eaef9c2a64cba38"
            ],
            [
                "fa5999d395a2dbc1"
            ],
            [
                "1ced418c13f23637"
            ]
        ]
    },
    {
        "id": "4ddd6aab4ec6d62f",
        "type": "debug",
        "z": "c763acb693edbb24",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2100,
        "wires": []
    },
    {
        "id": "0eaef9c2a64cba38",
        "type": "www-request",
        "z": "c763acb693edbb24",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://dotrezapi.test.0p.navitaire.com/0p/dotrez/api/nsk/v2/token",
        "proxyip": "192.168.56.5",
        "proxyport": "5002",
        "proxytype": "http://",
        "timeout": 10000,
        "follow-redirects": true,
        "tls": "",
        "tunneling": false,
        "x": 470,
        "y": 2060,
        "wires": [
            [
                "4ddd6aab4ec6d62f"
            ]
        ]
    }
]